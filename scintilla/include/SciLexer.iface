## This file defines the interface to Lexilla

## Copyright 2000-2020 by Neil Hodgson <neilh@scintilla.org>
## The License.txt file describes the conditions under which this software may be distributed.

## Similar file structure as Scintilla.iface but only contains constants.

cat Default

################################################
# For SciLexer.h
enu Lexer=SCLEX_
val SCLEX_CONTAINER=0
val SCLEX_NULL=1
val SCLEX_PYTHON=2
val SCLEX_CPP=3
val SCLEX_HTML=4
val SCLEX_XML=5
val SCLEX_PERL=6
val SCLEX_SQL=7
val SCLEX_VISUALBASIC=8
val SCLEX_PROPERTIES=9
#val SCLEX_ERRORLIST=10
val SCLEX_MAKEFILE=11
val SCLEX_BATCH=12
#val SCLEX_XCODE=13
val SCLEX_LATEX=14
val SCLEX_LUA=15
val SCLEX_DIFF=16
val SCLEX_CONFIG=17
val SCLEX_PASCAL=18
#val SCLEX_AVE=19
#val SCLEX_ADA=20
val SCLEX_LISP=21
val SCLEX_RUBY=22
#val SCLEX_EIFFEL=23
#val SCLEX_EIFFELKW=24
val SCLEX_TCL=25
#val SCLEX_NNCRONTAB=26
#val SCLEX_BULLANT=27
#val SCLEX_VBSCRIPT=28
#val SCLEX_BAAN=31
val SCLEX_MATLAB=32
#val SCLEX_SCRIPTOL=33
val SCLEX_ASM=34
#val SCLEX_CPPNOCASE=35
val SCLEX_FORTRAN=36
#val SCLEX_F77=37
val SCLEX_CSS=38
#val SCLEX_POV=39
#val SCLEX_LOUT=40
#val SCLEX_ESCRIPT=41
#val SCLEX_PS=42
val SCLEX_NSIS=43
#val SCLEX_MMIXAL=44
#val SCLEX_CLW=45
#val SCLEX_CLWNOCASE=46
#val SCLEX_LOT=47
val SCLEX_YAML=48
#val SCLEX_TEX=49
#val SCLEX_METAPOST=50
#val SCLEX_POWERBASIC=51
#val SCLEX_FORTH=52
#val SCLEX_ERLANG=53
#val SCLEX_OCTAVE=54
#val SCLEX_MSSQL=55
val SCLEX_VERILOG=56
#val SCLEX_KIX=57
#val SCLEX_GUI4CLI=58
#val SCLEX_SPECMAN=59
val SCLEX_AUTOIT3=60
val SCLEX_APDL=61
val SCLEX_BASH=62
#val SCLEX_ASN1=63
val SCLEX_VHDL=64
val SCLEX_OCAML=65
#val SCLEX_BLITZBASIC=66
#val SCLEX_PUREBASIC=67
val SCLEX_HASKELL=68
val SCLEX_PHPSCRIPT=69
#val SCLEX_TADS3=70
val SCLEX_REBOL=71
#val SCLEX_SMALLTALK=72
#val SCLEX_FLAGSHIP=73
#val SCLEX_CSOUND=74
#val SCLEX_FREEBASIC=75
val SCLEX_INNOSETUP=76
#val SCLEX_OPAL=77
#val SCLEX_SPICE=78
val SCLEX_DLANG=79
val SCLEX_CMAKE=80
#val SCLEX_GAP=81
#val SCLEX_PLM=82
#val SCLEX_PROGRESS=83
#val SCLEX_ABAQUS=84
val SCLEX_ASYMPTOTE=85
val SCLEX_RLANG=86
#val SCLEX_MAGIK=87
val SCLEX_POWERSHELL=88
#val SCLEX_MYSQL=89
#val SCLEX_PO=90
#val SCLEX_TAL=91
#val SCLEX_COBOL=92
#val SCLEX_TACL=93
#val SCLEX_SORCUS=94
#val SCLEX_POWERPRO=95
#val SCLEX_NIMROD=96
#val SCLEX_SML=97
val SCLEX_MARKDOWN=98
#val SCLEX_TXT2TAGS=99
#val SCLEX_A68K=100
#val SCLEX_MODULA=101
val SCLEX_COFFEESCRIPT=102
#val SCLEX_TCMD=103
val SCLEX_AVISYNTH=104
#val SCLEX_ECL=105
#val SCLEX_OSCRIPT=106
#val SCLEX_VISUALPROLOG=107
#val SCLEX_LITERATEHASKELL=108
#val SCLEX_STTXT=109
#val SCLEX_KVIRC=110
val SCLEX_RUST=111
#val SCLEX_DMAP=112
#val SCLEX_AS=113
#val SCLEX_DMIS=114
val SCLEX_REGISTRY=115
#val SCLEX_BIBTEX=116
val SCLEX_SRECORD=117
val SCLEX_INTELHEX=118
val SCLEX_TEKEXTHEX=119
val SCLEX_JSON=120
#val SCLEX_EDIFACT=121
#val SCLEX_INDENT=122
#val SCLEX_MAXIMA=123
#val SCLEX_STATA=124
val SCLEX_SAS=125
val SCLEX_NIM=126
val SCLEX_CIL=127
#val SCLEX_X12=128
#val SCLEX_DATAFLEX=129
#val SCLEX_HOLLYWOOD=130
#val SCLEX_RAKU=131
val SCLEX_FSHARP=132
val SCLEX_JULIA=133
#val SCLEX_ASCIIDOC=134
#val SCLEX_GDSCRIPT=135
val SCLEX_TOML=136
#val SCLEX_TROFF=137
val SCLEX_DART=138
val SCLEX_ZIG=139
#val SCLEX_NIX=140

# Notepad4 custom lexers
val SCLEX_AUTOHOTKEY=200
val SCLEX_SCILAB=201
val SCLEX_TEXINFO=202
val SCLEX_CSHARP=203
val SCLEX_SRT=204
val SCLEX_SMALI=205
val SCLEX_GRAPHVIZ=206
val SCLEX_VIM=207
val SCLEX_JAVA=208
val SCLEX_LLVM=209
val SCLEX_KOTLIN=210
val SCLEX_JAVASCRIPT=211
val SCLEX_SCALA=212
val SCLEX_WASM=213
#val SCLEX_TOML=214
val SCLEX_GN=215
val SCLEX_GO=216
#val SCLEX_DART=217
val SCLEX_SWIFT=218
val SCLEX_HAXE=219
val SCLEX_GROOVY=220
val SCLEX_JAMFILE=221
val SCLEX_AWK=222
val SCLEX_CSV=223
#val SCLEX_ZIG=224
val SCLEX_MATHEMATICA=225
val SCLEX_WINHEX=226
val SCLEX_CANGJIE=227
val SCLEX_GEOGEBRA=228

# When a lexer specifies its language as SCLEX_AUTOMATIC it receives a
# value assigned in sequence from SCLEX_AUTOMATIC+1.
val SCLEX_AUTOMATIC=1000

# Lexical states for SCLEX_PYTHON
lex Python=SCLEX_PYTHON SCE_PY_
val SCE_PY_DEFAULT=0
val SCE_PY_COMMENTLINE=1
val SCE_PY_COMMENTBLOCK=2
val SCE_PY_COMMENTTAGAT=3
val SCE_PY_TASKMARKER=4
val SCE_PY_NUMBER=5
val SCE_PY_WORD=6
val SCE_PY_WORD2=7
val SCE_PY_CLASS=8
val SCE_PY_FUNCTION_DEFINITION=9
val SCE_PY_OPERATOR=10
val SCE_PY_OPERATOR2=11
val SCE_PY_IDENTIFIER=12
val SCE_PY_DECORATOR=13
val SCE_PY_BUILTIN_FUNCTION=14
val SCE_PY_BUILTIN_CONSTANT=15
val SCE_PY_ATTRIBUTE=16
val SCE_PY_OBJECT_FUNCTION=17
val SCE_PY_FUNCTION=18
val SCE_PY_ESCAPECHAR=19
val SCE_PY_FORMAT_SPECIFIER=20
val SCE_PY_PLACEHOLDER=21
val SCE_PY_DOLLAR_PLACEHOLDER=22
val SCE_PY_KEY=
# string and bytes: even=single quoted, odd=double quoted
# triple: (state % 4)>=2, raw: (state % 8)>=4
val SCE_PY_STRING_SQ=40
val SCE_PY_STRING_DQ=41
val SCE_PY_TRIPLE_STRING_SQ=42
val SCE_PY_TRIPLE_STRING_DQ=43
val SCE_PY_RAWSTRING_SQ=44
val SCE_PY_RAWSTRING_DQ=45
val SCE_PY_TRIPLE_RAWSTRING_SQ=46
val SCE_PY_TRIPLE_RAWSTRING_DQ=47
val SCE_PY_FMTSTRING_SQ=48
val SCE_PY_FMTSTRING_DQ=49
val SCE_PY_TRIPLE_FMTSTRING_SQ=50
val SCE_PY_TRIPLE_FMTSTRING_DQ=51
val SCE_PY_RAWFMTSTRING_SQ=52
val SCE_PY_RAWFMTSTRING_DQ=53
val SCE_PY_TRIPLE_RAWFMTSTRING_SQ=54
val SCE_PY_TRIPLE_RAWFMTSTRING_DQ=55
val SCE_PY_BYTES_SQ=56
val SCE_PY_BYTES_DQ=57
val SCE_PY_TRIPLE_BYTES_SQ=58
val SCE_PY_TRIPLE_BYTES_DQ=59
val SCE_PY_RAWBYTES_SQ=60
val SCE_PY_RAWBYTES_DQ=61
val SCE_PY_TRIPLE_RAWBYTES_SQ=62
val SCE_PY_TRIPLE_RAWBYTES_DQ=63
# Lexical states for SCLEX_CPP
# Lexical states for SCLEX_BULLANT
# Lexical states for SCLEX_COBOL
# Lexical states for SCLEX_TACL
# Lexical states for SCLEX_TAL
lex Cpp=SCLEX_CPP SCE_C_
#lex BullAnt=SCLEX_BULLANT SCE_C_
#lex COBOL=SCLEX_COBOL SCE_C_
#lex TACL=SCLEX_TACL SCE_C_
#lex TAL=SCLEX_TAL SCE_C_
val SCE_C_DEFAULT=0
val SCE_C_COMMENT=1
val SCE_C_COMMENTLINE=2
val SCE_C_COMMENTDOC=3
val SCE_C_COMMENTLINEDOC=4
val SCE_C_COMMENTDOC_TAG=5
val SCE_C_COMMENTDOC_TAG_XML=6
val SCE_C_IDENTIFIER=7
val SCE_C_WORD=8
val SCE_C_WORD2=9
val SCE_C_PREPROCESSOR=10
val SCE_C_DIRECTIVE=11
val SCE_C_OPERATOR=12
val SCE_C_CHARACTER=
val SCE_C_STRING=
val SCE_C_STRINGEOL=
val SCE_C_STRINGRAW=
val SCE_C_ESCAPECHAR=
val SCE_C_NUMBER=
val SCE_C_LABEL=
val SCE_C_ASM_INSTRUCTION=
val SCE_C_ASM_REGISTER=
val SCE_C_CLASS=
val SCE_C_STRUCT=
# 32-39 StylesCommon
val SCE_C_UNION=40
val SCE_C_INTERFACE=42
val SCE_C_ATTRIBUTE=43
val SCE_C_ENUMERATION=44
val SCE_C_CONSTANT=45
val SCE_C_FUNCTION=46
val SCE_C_MACRO=47
val SCE_C_MACRO2=48

val SCE_C_2NDWORD=50
val SCE_C_2NDWORD2=51
val SCE_C_UUID=56
# Lexical states for SCLEX_D
lex DLang=SCLEX_DLANG SCE_D_
val SCE_D_DEFAULT=
val SCE_D_COMMENTLINE=
val SCE_D_COMMENTLINEDOC=
val SCE_D_COMMENTBLOCK=
val SCE_D_COMMENTBLOCKDOC=
val SCE_D_NESTED_COMMENT=
val SCE_D_NESTED_COMMENTDOC=
val SCE_D_COMMENTDOCWORD=
val SCE_D_COMMENTDOCMACRO=
val SCE_D_TASKMARKER=
val SCE_D_NUMBER=
val SCE_D_CHARACTER=
val SCE_D_ESCAPECHAR=
val SCE_D_FORMAT_SPECIFIER=
val SCE_D_DELIMITED_ID=
val SCE_D_STRING=
val SCE_D_HEXSTRING=
val SCE_D_RAWSTRING=
val SCE_D_STRING_BT=
val SCE_D_DELIMITED_STRING=
val SCE_D_TOKEN_STRING=
val SCE_D_OPERATOR=
val SCE_D_IDENTIFIER=
val SCE_D_PREPROCESSOR=
val SCE_D_ATTRIBUTE=
val SCE_D_WORD=
val SCE_D_WORD2=
val SCE_D_CLASS=
val SCE_D_STRUCT=
val SCE_D_UNION=
val SCE_D_INTERFACE=
val SCE_D_TRAIT=
val SCE_D_ENUM=
val SCE_D_CONSTANT=
val SCE_D_FUNCTION=
val SCE_D_FUNCTION_DEFINITION=
val SCE_D_LABEL=
val SCE_D_ASM_INSTRUCTION=
val SCE_D_ASM_REGISTER=
# Lexical states for SCLEX_TCL
lex TCL=SCLEX_TCL SCE_TCL_
val SCE_TCL_DEFAULT=
val SCE_TCL_COMMENT=
val SCE_TCL_COMMENTLINE=
val SCE_TCL_COMMENT_BOX=
val SCE_TCL_BLOCK_COMMENT=
val SCE_TCL_TASKMARKER=
val SCE_TCL_NUMBER=
val SCE_TCL_WORD_IN_QUOTE=
val SCE_TCL_IN_QUOTE=
val SCE_TCL_OPERATOR=
val SCE_TCL_IDENTIFIER=
val SCE_TCL_SUBSTITUTION=
val SCE_TCL_SUB_BRACE=
val SCE_TCL_MODIFIER=
val SCE_TCL_EXPAND=
val SCE_TCL_WORD=
val SCE_TCL_WORD2=
val SCE_TCL_WORD3=
val SCE_TCL_WORD4=
val SCE_TCL_WORD5=
val SCE_TCL_WORD6=
val SCE_TCL_WORD7=
val SCE_TCL_WORD8=
# Lexical states for SCLEX_HTML, SCLEX_XML
lex HTML=SCLEX_HTML SCE_H_ SCE_HJ_ SCE_HJA_ SCE_HB_ SCE_HBA_
lex XML=SCLEX_XML SCE_H_ SCE_HJ_ SCE_HJA_ SCE_HB_ SCE_HBA_
#lex ASP=SCLEX_ASP SCE_H_ SCE_HJ_ SCE_HJA_ SCE_HB_ SCE_HBA_
val SCE_H_DEFAULT=0
val SCE_H_TAG=1
val SCE_H_TAGUNKNOWN=2
val SCE_H_ATTRIBUTE=3
val SCE_H_ATTRIBUTEUNKNOWN=4
val SCE_H_NUMBER=5
val SCE_H_DOUBLESTRING=6
val SCE_H_SINGLESTRING=7
val SCE_H_OTHER=8
val SCE_H_COMMENT=9
val SCE_H_ENTITY=10
# XML and ASP
val SCE_H_TAGEND=11
val SCE_H_XMLSTART=12
val SCE_H_XMLEND=13
val SCE_H_SCRIPT=14
val SCE_H_CDATA=15
val SCE_H_QUESTION=16
val SCE_H_VALUE=17
val SCE_H_ASP=18
val SCE_H_ASPAT=19
# X-Code, ASP.NET, JSP
val SCE_H_XCCOMMENT=20
# SGML
val SCE_H_SGML_DEFAULT=21
val SCE_H_SGML_COMMAND=22
val SCE_H_SGML_1ST_PARAM=23
val SCE_H_SGML_DOUBLESTRING=24
val SCE_H_SGML_SIMPLESTRING=25
val SCE_H_SGML_ERROR=26
val SCE_H_SGML_SPECIAL=27
val SCE_H_SGML_ENTITY=28
val SCE_H_SGML_COMMENT=29
val SCE_H_SGML_1ST_PARAM_COMMENT=30
val SCE_H_SGML_BLOCK_DEFAULT=31
# Embedded JavaScript
val SCE_HJ_START=40
val SCE_HJ_DEFAULT=41
val SCE_HJ_COMMENT=42
val SCE_HJ_COMMENTLINE=43
val SCE_HJ_COMMENTDOC=44
val SCE_HJ_NUMBER=45
val SCE_HJ_WORD=46
val SCE_HJ_KEYWORD=47
val SCE_HJ_DOUBLESTRING=48
val SCE_HJ_SINGLESTRING=49
val SCE_HJ_SYMBOLS=50
val SCE_HJ_STRINGEOL=51
val SCE_HJ_REGEX=52
val SCE_HJ_TEMPLATELITERAL=53
# ASP JavaScript
val SCE_HJA_START=55
val SCE_HJA_DEFAULT=56
val SCE_HJA_COMMENT=57
val SCE_HJA_COMMENTLINE=58
val SCE_HJA_COMMENTDOC=59
val SCE_HJA_NUMBER=60
val SCE_HJA_WORD=61
val SCE_HJA_KEYWORD=62
val SCE_HJA_DOUBLESTRING=63
val SCE_HJA_SINGLESTRING=64
val SCE_HJA_SYMBOLS=65
val SCE_HJA_STRINGEOL=66
val SCE_HJA_REGEX=67
val SCE_HJA_TEMPLATELITERAL=68
# Embedded VBScript
val SCE_HB_START=70
val SCE_HB_DEFAULT=71
val SCE_HB_COMMENTLINE=72
val SCE_HB_NUMBER=73
val SCE_HB_WORD=74
val SCE_HB_STRING=75
val SCE_HB_IDENTIFIER=76
val SCE_HB_STRINGEOL=77
val SCE_HB_OPERATOR=78
# ASP VBScript
val SCE_HBA_START=80
val SCE_HBA_DEFAULT=81
val SCE_HBA_COMMENTLINE=82
val SCE_HBA_NUMBER=83
val SCE_HBA_WORD=84
val SCE_HBA_STRING=85
val SCE_HBA_IDENTIFIER=86
val SCE_HBA_STRINGEOL=87
val SCE_HBA_OPERATOR=88
# Lexical states for SCLEX_PERL
lex Perl=SCLEX_PERL SCE_PL_
val SCE_PL_DEFAULT=
val SCE_PL_COMMENTLINE=
val SCE_PL_ERROR=
val SCE_PL_NUMBER=
val SCE_PL_WORD=
val SCE_PL_PUNCTUATION=
val SCE_PL_PREPROCESSOR=
val SCE_PL_OPERATOR=
val SCE_PL_IDENTIFIER=
val SCE_PL_SCALAR=
val SCE_PL_ARRAY=
val SCE_PL_HASH=
val SCE_PL_SYMBOLTABLE=
val SCE_PL_VARIABLE_INDEXER=
val SCE_PL_STRING_DQ=15
val SCE_PL_STRING_SQ=16
val SCE_PL_REGEX=17
val SCE_PL_REGSUBST=18
val SCE_PL_LONGQUOTE=19
val SCE_PL_BACKTICKS=20
val SCE_PL_HERE_DELIM=21
val SCE_PL_HERE_Q=22
val SCE_PL_HERE_QQ=23
val SCE_PL_HERE_QX=24
val SCE_PL_STRING_Q=25
val SCE_PL_STRING_QQ=26
val SCE_PL_STRING_QX=27
val SCE_PL_STRING_QR=28
val SCE_PL_STRING_QW=29
val SCE_PL_FORMAT_IDENT=30
val SCE_PL_FORMAT=31
val SCE_PL_POD=40
val SCE_PL_POD_VERB=41
val SCE_PL_DATASECTION=42
val SCE_PL_SUB_PROTOTYPE=43
val SCE_PL_STRING_VAR=44
val SCE_PL_XLAT=45
# Lexical states for SCLEX_RUBY
lex Ruby=SCLEX_RUBY SCE_RB_
val SCE_RB_DEFAULT=
val SCE_RB_COMMENTLINE=
val SCE_RB_ERROR=
val SCE_RB_NUMBER=
val SCE_RB_WORD=
val SCE_RB_CLASS_NAME=
val SCE_RB_DEF_NAME=
val SCE_RB_OPERATOR=
val SCE_RB_IDENTIFIER=
val SCE_RB_GLOBAL=
val SCE_RB_SYMBOL=
val SCE_RB_MODULE_NAME=
val SCE_RB_INSTANCE_VAR=
val SCE_RB_CLASS_VAR=
val SCE_RB_STRING_DQ=
val SCE_RB_STRING_SQ=
val SCE_RB_REGEX=
val SCE_RB_BACKTICKS=
val SCE_RB_HERE_DELIM=
val SCE_RB_HERE_Q=
val SCE_RB_HERE_QQ=
val SCE_RB_HERE_QX=
val SCE_RB_STRING_Q=
val SCE_RB_STRING_QQ=
val SCE_RB_STRING_QX=
val SCE_RB_STRING_QR=
val SCE_RB_STRING_QW=
val SCE_RB_STRING_W=
val SCE_RB_STRING_I=
val SCE_RB_STRING_QI=
val SCE_RB_STRING_QS=
val SCE_RB_WORD_DEMOTED=
val SCE_RB_POD=
val SCE_RB_DATASECTION=
val SCE_RB_STDIN=
val SCE_RB_STDOUT=
val SCE_RB_STDERR=
val SCE_RB_FUNCTION=
val SCE_RB_LIKE_MODULE=
val SCE_RB_LIKE_CLASS=
val SCE_RB_BUILTIN_CONSTANT=
val SCE_RB_BUILTIN_FUNCTION=
val SCE_RB_UPPER_BOUND=
# Lexical states for SCLEX_VISUALBASIC, SCLEX_VBSCRIPT
lex VisualBasic=SCLEX_VISUALBASIC SCE_VB_
lex VBScript=SCLEX_VBSCRIPT SCE_VB_
val SCE_VB_DEFAULT=
val SCE_VB_COMMENTLINE=
val SCE_VB_LINE_CONTINUATION=
val SCE_VB_OPERATOR=
val SCE_VB_OPERATOR2=
val SCE_VB_NUMBER=
val SCE_VB_STRING=
val SCE_VB_INTERPOLATED_STRING=
val SCE_VB_ESCAPECHAR=
val SCE_VB_FORMAT_SPECIFIER=
val SCE_VB_PLACEHOLDER=
val SCE_VB_IDENTIFIER=
val SCE_VB_DATE=
val SCE_VB_FILENUMBER=
val SCE_VB_KEYWORD=
val SCE_VB_KEYWORD2=
val SCE_VB_KEYWORD3=
val SCE_VB_CLASS=
val SCE_VB_INTERFACE=
val SCE_VB_ENUM=
val SCE_VB_ATTRIBUTE=
val SCE_VB_CONSTANT=
val SCE_VB_BASIC_FUNCTION=
val SCE_VB_FUNCTION_DEFINITION=
val SCE_VB_FUNCTION=
val SCE_VB_PREPROCESSOR=
val SCE_VB_PREPROCESSOR_WORD=
val SCE_VB_LABEL=
# Lexical states for SCLEX_POWERBASIC, SCLEX_BLITZBASIC, SCLEX_PUREBASIC, SCLEX_FREEBASIC
#lex PowerBasic=SCLEX_POWERBASIC SCE_B_
#lex BlitzBasic=SCLEX_BLITZBASIC SCE_B_
#lex PureBasic=SCLEX_PUREBASIC SCE_B_
#lex FreeBasic=SCLEX_FREEBASIC SCE_B_
# Lexical states for SCLEX_PROPERTIES
lex Properties=SCLEX_PROPERTIES SCE_PROPS_
val SCE_PROPS_DEFAULT=0
val SCE_PROPS_COMMENT=1
val SCE_PROPS_SECTION=2
val SCE_PROPS_ASSIGNMENT=3
val SCE_PROPS_DEFVAL=4
val SCE_PROPS_KEY=5
# Lexical states for SCLEX_LATEX
lex LaTeX=SCLEX_LATEX SCE_L_
val SCE_L_DEFAULT=
val SCE_L_COMMENT=
val SCE_L_COMMENT2=
val SCE_L_VERBATIM2=
val SCE_L_VERBATIM=
val SCE_L_LISTCODE=
val SCE_L_COMMAND=
val SCE_L_TAG=
val SCE_L_TAG2=
val SCE_L_MARCO=
val SCE_L_OPERATOR=
val SCE_L_SPECIAL=
val SCE_L_TITLE=
val SCE_L_CHAPTER=
val SCE_L_SECTION=
val SCE_L_SECTION1=
val SCE_L_SECTION2=
val SCE_L_MATH=
val SCE_L_MATH2=
val SCE_L_SHORTCMD=
val SCE_L_CMDOPT=
val SCE_L_STRING=
val SCE_L_QUOTE1=
val SCE_L_QUOTE2=
val SCE_L_ERROR=
# Lexical states for SCLEX_TEXINFO
lex Texinfo=SCLEX_TEXINFO SCE_TEXINFO_
val SCE_TEXINFO_DEFAULT=
val SCE_TEXINFO_COMMENT=
val SCE_TEXINFO_COMMENT2=
val SCE_TEXINFO_VERBATIM2=
val SCE_TEXINFO_VERBATIM=
val SCE_TEXINFO_COMMAND=
val SCE_TEXINFO_TEX_COMMAND=
val SCE_TEXINFO_END_TAG=
val SCE_TEXINFO_MARCO=
val SCE_TEXINFO_OPERATOR=
val SCE_TEXINFO_SPECIAL=
val SCE_TEXINFO_TITLE=
val SCE_TEXINFO_CHAPTER=
val SCE_TEXINFO_SECTION=
val SCE_TEXINFO_SECTION1=
val SCE_TEXINFO_SECTION2=
# Lexical states for SCLEX_LUA
lex Lua=SCLEX_LUA SCE_LUA_
val SCE_LUA_DEFAULT=
val SCE_LUA_COMMENT=
val SCE_LUA_COMMENTLINE=
val SCE_LUA_NUMBER=
val SCE_LUA_OPERATOR=
val SCE_LUA_STRING_SQ=
val SCE_LUA_STRING_DQ=
val SCE_LUA_ESCAPECHAR=
val SCE_LUA_FORMAT_SPECIFIER=
val SCE_LUA_LITERALSTRING=
val SCE_LUA_IDENTIFIER=
val SCE_LUA_ATTRIBUTE=
val SCE_LUA_WORD=
val SCE_LUA_BUILTIN_FUNC=
val SCE_LUA_METAMETHOD=
val SCE_LUA_FUNCTION_DEFINITION=
val SCE_LUA_FUNCTION=
val SCE_LUA_LABEL=
# Lexical states for SCLEX_ERRORLIST
#lex ErrorList=SCLEX_ERRORLIST SCE_ERR_
#val SCE_ERR_DEFAULT=0
#val SCE_ERR_PYTHON=1
#val SCE_ERR_GCC=2
#val SCE_ERR_MS=3
#val SCE_ERR_CMD=4
#val SCE_ERR_BORLAND=5
#val SCE_ERR_PERL=6
#val SCE_ERR_NET=7
#val SCE_ERR_LUA=8
#val SCE_ERR_CTAG=9
#val SCE_ERR_DIFF_CHANGED=10
#val SCE_ERR_DIFF_ADDITION=11
#val SCE_ERR_DIFF_DELETION=12
#val SCE_ERR_DIFF_MESSAGE=13
#val SCE_ERR_PHP=14
#val SCE_ERR_ELF=15
#val SCE_ERR_IFC=16
#val SCE_ERR_IFORT=17
#val SCE_ERR_ABSF=18
#val SCE_ERR_TIDY=19
#val SCE_ERR_JAVA_STACK=20
#val SCE_ERR_VALUE=21
#val SCE_ERR_GCC_INCLUDED_FROM=22
#val SCE_ERR_ESCSEQ=23
#val SCE_ERR_ESCSEQ_UNKNOWN=24
#val SCE_ERR_ES_BLACK=40
#val SCE_ERR_ES_RED=41
#val SCE_ERR_ES_GREEN=42
#val SCE_ERR_ES_BROWN=43
#val SCE_ERR_ES_BLUE=44
#val SCE_ERR_ES_MAGENTA=45
#val SCE_ERR_ES_CYAN=46
#val SCE_ERR_ES_GRAY=47
#val SCE_ERR_ES_DARK_GRAY=48
#val SCE_ERR_ES_BRIGHT_RED=49
#val SCE_ERR_ES_BRIGHT_GREEN=50
#val SCE_ERR_ES_YELLOW=51
#val SCE_ERR_ES_BRIGHT_BLUE=52
#val SCE_ERR_ES_BRIGHT_MAGENTA=53
#val SCE_ERR_ES_BRIGHT_CYAN=54
#val SCE_ERR_ES_WHITE=55
# Lexical states for SCLEX_BATCH
lex Batch=SCLEX_BATCH SCE_BAT_
val SCE_BAT_DEFAULT=
val SCE_BAT_COMMENT=
val SCE_BAT_IDENTIFIER=
val SCE_BAT_WORD=
val SCE_BAT_COMMAND=
val SCE_BAT_VARIABLE=
val SCE_BAT_LABEL=
val SCE_BAT_LABEL_LINE=
val SCE_BAT_OPERATOR=
val SCE_BAT_ESCAPECHAR=
val SCE_BAT_NOT_BATCH=
val SCE_BAT_STRINGDQ=11
val SCE_BAT_STRINGSQ=12
val SCE_BAT_STRINGBT=13
val SCE_BAT_LINE_CONTINUATION=
# Lexical states for SCLEX_TCMD
#lex TCMD=SCLEX_TCMD SCE_TCMD_
#val SCE_TCMD_DEFAULT=0
#val SCE_TCMD_COMMENT=1
#val SCE_TCMD_WORD=2
#val SCE_TCMD_LABEL=3
#val SCE_TCMD_HIDE=4
#val SCE_TCMD_COMMAND=5
#val SCE_TCMD_IDENTIFIER=6
#val SCE_TCMD_OPERATOR=7
#val SCE_TCMD_ENVIRONMENT=8
#val SCE_TCMD_EXPANSION=9
#val SCE_TCMD_CLABEL=10
# Lexical states for SCLEX_MAKEFILE
lex Makefile=SCLEX_MAKEFILE SCE_MAKE_
val SCE_MAKE_DEFAULT=0
val SCE_MAKE_COMMENT=1
val SCE_MAKE_PREPROCESSOR=2
val SCE_MAKE_IDENTIFIER=3
val SCE_MAKE_OPERATOR=4
val SCE_MAKE_TARGET=5
#val SCE_MAKE_IDEOL=9
val SCE_MAKE_MACRO=6
val SCE_MAKE_FUNCTION=7
val SCE_MAKE_COMMAND=8
val SCE_MAKE_DIRECTIVE=9
val SCE_MAKE_VARIABLE=10
# $(var)
val SCE_MAKE_VARIABLE2=11
# ${var}
val SCE_MAKE_VARIABLE3=12
# single quoted
var SCE_MAKE_STRING1=13
# double quoted
var SCE_MAKE_STRING2=14
# backticks
var SCE_MAKE_STRING3=15
var SCE_MAKE_NUMBER=16
var SCE_MAKE_MSG=17
val SCE_MAKE_IDEOL=18
# Lexical states for SCLEX_DIFF
lex Diff=SCLEX_DIFF SCE_DIFF_
val SCE_DIFF_DEFAULT=0
val SCE_DIFF_COMMENT=1
val SCE_DIFF_COMMAND=2
val SCE_DIFF_HEADER=3
val SCE_DIFF_POSITION=4
val SCE_DIFF_DELETED=5
val SCE_DIFF_ADDED=6
val SCE_DIFF_CHANGED=7
val SCE_DIFF_PATCH_ADD=8
val SCE_DIFF_PATCH_DELETE=9
val SCE_DIFF_REMOVED_PATCH_ADD=10
val SCE_DIFF_REMOVED_PATCH_DELETE=11
# Lexical states for SCLEX_CONFIG (Apache Configuration Files Lexer)
lex Config=SCLEX_CONFIG SCE_CONF_
val SCE_CONF_DEFAULT=0
val SCE_CONF_COMMENT=1
val SCE_CONF_NUMBER=2
val SCE_CONF_IDENTIFIER=3
val SCE_CONF_EXTENSION=4
val SCE_CONF_PARAMETER=5
val SCE_CONF_STRING=6
val SCE_CONF_OPERATOR=7
val SCE_CONF_IP=8
val SCE_CONF_DIRECTIVE=9
val SCE_CONF_SECTION=10
val SCE_CONF_HEXNUM=11
# Lexical states for SCLEX_AVE, Avenue
#lex Avenue=SCLEX_AVE SCE_AVE_
#val SCE_AVE_DEFAULT=0
#val SCE_AVE_COMMENT=1
#val SCE_AVE_NUMBER=2
#val SCE_AVE_WORD=3
#val SCE_AVE_STRING=6
#val SCE_AVE_ENUM=7
#val SCE_AVE_STRINGEOL=8
#val SCE_AVE_IDENTIFIER=9
#val SCE_AVE_OPERATOR=10
#val SCE_AVE_WORD1=11
#val SCE_AVE_WORD2=12
#val SCE_AVE_WORD3=13
#val SCE_AVE_WORD4=14
#val SCE_AVE_WORD5=15
#val SCE_AVE_WORD6=16
# Lexical states for SCLEX_ADA
#lex Ada=SCLEX_ADA SCE_ADA_
#val SCE_ADA_DEFAULT=0
#val SCE_ADA_WORD=1
#val SCE_ADA_IDENTIFIER=2
#val SCE_ADA_NUMBER=3
#val SCE_ADA_DELIMITER=4
#val SCE_ADA_CHARACTER=5
#val SCE_ADA_CHARACTEREOL=6
#val SCE_ADA_STRING=7
#val SCE_ADA_STRINGEOL=8
#val SCE_ADA_LABEL=9
#val SCE_ADA_COMMENTLINE=10
#val SCE_ADA_ILLEGAL=11
# Lexical states for SCLEX_BAAN
#lex Baan=SCLEX_BAAN SCE_BAAN_
#val SCE_BAAN_DEFAULT=0
#val SCE_BAAN_COMMENT=1
#val SCE_BAAN_COMMENTDOC=2
#val SCE_BAAN_NUMBER=3
#val SCE_BAAN_WORD=4
#val SCE_BAAN_STRING=5
#val SCE_BAAN_PREPROCESSOR=6
#val SCE_BAAN_OPERATOR=7
#val SCE_BAAN_IDENTIFIER=8
#val SCE_BAAN_STRINGEOL=9
#val SCE_BAAN_WORD2=10
#val SCE_BAAN_WORD3=11
#val SCE_BAAN_WORD4=12
#val SCE_BAAN_WORD5=13
#val SCE_BAAN_WORD6=14
#val SCE_BAAN_WORD7=15
#val SCE_BAAN_WORD8=16
#val SCE_BAAN_WORD9=17
#val SCE_BAAN_TABLEDEF=18
#val SCE_BAAN_TABLESQL=19
#val SCE_BAAN_FUNCTION=20
#val SCE_BAAN_DOMDEF=21
#val SCE_BAAN_FUNCDEF=22
#val SCE_BAAN_OBJECTDEF=23
#val SCE_BAAN_DEFINEDEF=24
# Lexical states for SCLEX_LISP
lex Lisp=SCLEX_LISP SCE_LISP_
val SCE_LISP_DEFAULT=
val SCE_LISP_COMMENTLINE=
val SCE_LISP_COMMENTBLOCK=
val SCE_LISP_TASKMARKER=
val SCE_LISP_NUMBER=
val SCE_LISP_OPERATOR=
val SCE_LISP_CHARACTER=
val SCE_LISP_STRING=
val SCE_LISP_IDENTIFIER=
val SCE_LISP_KEYWORD=
# Lexical states for SCLEX_EIFFEL and SCLEX_EIFFELKW
#lex Eiffel=SCLEX_EIFFEL SCE_EIFFEL_
#lex EiffelKW=SCLEX_EIFFELKW SCE_EIFFEL_
#val SCE_EIFFEL_DEFAULT=0
#val SCE_EIFFEL_COMMENTLINE=1
#val SCE_EIFFEL_NUMBER=2
#val SCE_EIFFEL_WORD=3
#val SCE_EIFFEL_STRING=4
#val SCE_EIFFEL_CHARACTER=5
#val SCE_EIFFEL_OPERATOR=6
#val SCE_EIFFEL_IDENTIFIER=7
#val SCE_EIFFEL_STRINGEOL=8
# Lexical states for SCLEX_NNCRONTAB (nnCron crontab Lexer)
#lex NNCronTab=SCLEX_NNCRONTAB SCE_NNCRONTAB_
#val SCE_NNCRONTAB_DEFAULT=0
#val SCE_NNCRONTAB_COMMENT=1
#val SCE_NNCRONTAB_TASK=2
#val SCE_NNCRONTAB_SECTION=3
#val SCE_NNCRONTAB_KEYWORD=4
#val SCE_NNCRONTAB_MODIFIER=5
#val SCE_NNCRONTAB_ASTERISK=6
#val SCE_NNCRONTAB_NUMBER=7
#val SCE_NNCRONTAB_STRING=8
#val SCE_NNCRONTAB_ENVIRONMENT=9
#val SCE_NNCRONTAB_IDENTIFIER=10
# Lexical states for SCLEX_FORTH (Forth Lexer)
#lex Forth=SCLEX_FORTH SCE_FORTH_
#val SCE_FORTH_DEFAULT=0
#val SCE_FORTH_COMMENT=1
#val SCE_FORTH_COMMENT_ML=2
#val SCE_FORTH_IDENTIFIER=3
#val SCE_FORTH_CONTROL=4
#val SCE_FORTH_KEYWORD=5
#val SCE_FORTH_DEFWORD=6
#val SCE_FORTH_PREWORD1=7
#val SCE_FORTH_PREWORD2=8
#val SCE_FORTH_NUMBER=9
#val SCE_FORTH_STRING=10
#val SCE_FORTH_LOCALE=11
# Lexical states for SCLEX_MATLAB
lex Matlab=SCLEX_MATLAB SCE_MAT_
val SCE_MAT_DEFAULT=
val SCE_MAT_COMMENT=
val SCE_MAT_COMMENTBLOCK=
val SCE_MAT_TASKMARKER=
val SCE_MAT_COMMAND=
val SCE_MAT_NUMBER=
val SCE_MAT_KEYWORD=
val SCE_MAT_OPERATOR=
val SCE_MAT_IDENTIFIER=
val SCE_MAT_STRING=
val SCE_MAT_DOUBLEQUOTESTRING=
val SCE_MAT_ATTRIBUTE=
val SCE_MAT_INTERNALCOMMAND=
val SCE_MAT_FUNCTION1=
val SCE_MAT_FUNCTION2=
val SCE_MAT_HEXNUM=
val SCE_MAT_CALLBACK=
val SCE_MAT_FUNCTION=
# Lexical states for SCLEX_FSHARP
lex FSharp=SCLEX_FSHARP SCE_FSHARP_
val SCE_FSHARP_DEFAULT=
val SCE_FSHARP_COMMENT=
val SCE_FSHARP_COMMENTLINE=
val SCE_FSHARP_COMMENTLINEDOC=
val SCE_FSHARP_COMMENTTAG_XML=
val SCE_FSHARP_TASKMARKER=
val SCE_FSHARP_NUMBER=
val SCE_FSHARP_OPERATOR=
val SCE_FSHARP_OPERATOR2=
val SCE_FSHARP_IDENTIFIER=
val SCE_FSHARP_PREPROCESSOR=
val SCE_FSHARP_CHARACTER=
val SCE_FSHARP_STRING=
val SCE_FSHARP_INTERPOLATED_STRING=
val SCE_FSHARP_VERBATIM_STRING=
val SCE_FSHARP_INTERPOLATED_VERBATIM_STRING=
val SCE_FSHARP_TRIPLE_STRING=
val SCE_FSHARP_INTERPOLATED_TRIPLE_STRING=
val SCE_FSHARP_ESCAPECHAR=
val SCE_FSHARP_FORMAT_SPECIFIER=
val SCE_FSHARP_BACKTICK=
val SCE_FSHARP_QUOTATION=
val SCE_FSHARP_KEYWORD=
val SCE_FSHARP_TYPE=
val SCE_FSHARP_ATTRIBUTE=
# Lexical states for SCLEX_MAXIMA
#lex Maxima=SCLEX_MAXIMA SCE_MAXIMA_
#val SCE_MAXIMA_OPERATOR=0
#val SCE_MAXIMA_COMMANDENDING=1
#val SCE_MAXIMA_COMMENT=2
#val SCE_MAXIMA_NUMBER=3
#val SCE_MAXIMA_STRING=4
#val SCE_MAXIMA_COMMAND=5
#val SCE_MAXIMA_VARIABLE=6
#val SCE_MAXIMA_UNKNOWN=7
# Lexical states for SCLEX_SCRIPTOL
#lex Sol=SCLEX_SCRIPTOL SCE_SCRIPTOL_
#val SCE_SCRIPTOL_DEFAULT=0
#val SCE_SCRIPTOL_WHITE=1
#val SCE_SCRIPTOL_COMMENTLINE=2
#val SCE_SCRIPTOL_PERSISTENT=3
#val SCE_SCRIPTOL_CSTYLE=4
#val SCE_SCRIPTOL_COMMENTBLOCK=5
#val SCE_SCRIPTOL_NUMBER=6
#val SCE_SCRIPTOL_STRING=7
#val SCE_SCRIPTOL_CHARACTER=8
#val SCE_SCRIPTOL_STRINGEOL=9
#val SCE_SCRIPTOL_KEYWORD=10
#val SCE_SCRIPTOL_OPERATOR=11
#val SCE_SCRIPTOL_IDENTIFIER=12
#val SCE_SCRIPTOL_TRIPLE=13
#val SCE_SCRIPTOL_CLASSNAME=14
#val SCE_SCRIPTOL_PREPROCESSOR=15
# Lexical states for SCLEX_ASM, SCLEX_AS
lex Asm=SCLEX_ASM SCE_ASM_
#lex As=SCLEX_AS SCE_ASM_
val SCE_ASM_DEFAULT=
val SCE_ASM_COMMENT=
val SCE_ASM_COMMENTBLOCK=
val SCE_ASM_COMMENTDIRECTIVE=
val SCE_ASM_COMMENTLINE=
val SCE_ASM_COMMENT2=
val SCE_ASM_TASKMARKER=
val SCE_ASM_NUMBER=
val SCE_ASM_CHARACTER=
val SCE_ASM_STRING=
val SCE_ASM_STRINGEOL=
val SCE_ASM_OPERATOR=
val SCE_ASM_IDENTIFIER=
val SCE_ASM_CPUINSTRUCTION=
val SCE_ASM_MATHINSTRUCTION=
val SCE_ASM_REGISTER=
val SCE_ASM_DIRECTIVE=
val SCE_ASM_DIRECTIVEOPERAND=
val SCE_ASM_EXTINSTRUCTION=
val SCE_ASM_LABEL=
val SCE_ASM_PREPROCESSOR=
val SCE_ASM_HEXNUM=
val SCE_ASM_OCTNUM=
val SCE_ASM_BINNUM=
# Lexical states for SCLEX_SMALI
lex Smali=SCLEX_SMALI SCE_SMALI_
val SCE_SMALI_DEFAULT=0
val SCE_SMALI_COMMENTLINE=2
val SCE_SMALI_FIELD=3
val SCE_SMALI_METHOD=4
val SCE_SMALI_LABEL_EOL=5
val SCE_SMALI_IDENTIFIER=7
val SCE_SMALI_WORD=8
val SCE_SMALI_TYPE=9
val SCE_SMALI_DIRECTIVE=11
val SCE_SMALI_OPERATOR=12
val SCE_SMALI_CHARACTER=13
val SCE_SMALI_STRING=14
val SCE_SMALI_NUMBER=16
val SCE_SMALI_LABEL=17
val SCE_SMALI_INSTRUCTION=18
val SCE_SMALI_REGISTER=19
# Lexical states for SCLEX_FORTRAN
lex Fortran=SCLEX_FORTRAN SCE_F_
#lex F77=SCLEX_F77 SCE_F_
val SCE_F_DEFAULT=
val SCE_F_COMMENT=
val SCE_F_NUMBER=
val SCE_F_STRING_SQ=
val SCE_F_STRING_DQ=
val SCE_F_ESCAPECHAR=
val SCE_F_OPERATOR=
val SCE_F_OPERATOR2=
val SCE_F_IDENTIFIER=
val SCE_F_LABEL=
val SCE_F_WORD=
val SCE_F_FOLDING_WORD=
val SCE_F_TYPE=
val SCE_F_ATTRIBUTE=
val SCE_F_INTRINSIC=
val SCE_F_FUNCTION_DEFINITION=
val SCE_F_FUNCTION=
val SCE_F_PREPROCESSOR=
# Lexical states for SCLEX_CSS
lex CSS=SCLEX_CSS SCE_CSS_
val SCE_CSS_DEFAULT=
val SCE_CSS_COMMENTLINE=
val SCE_CSS_COMMENTLINEDOC=
val SCE_CSS_COMMENTBLOCK=
val SCE_CSS_COMMENTBLOCKDOC=
val SCE_CSS_CDO_CDC=
val SCE_CSS_OPERATOR=
val SCE_CSS_OPERATOR2=
val SCE_CSS_NUMBER=
val SCE_CSS_UNICODE_RANGE=
val SCE_CSS_ESCAPECHAR=
val SCE_CSS_STRING_SQ=
val SCE_CSS_STRING_DQ=
val SCE_CSS_URL=
val SCE_CSS_VALUE=
val SCE_CSS_IMPORTANT=
val SCE_CSS_DIMENSION=
val SCE_CSS_VARIABLE=
val SCE_CSS_AT_RULE=
val SCE_CSS_IDENTIFIER=
val SCE_CSS_PSEUDOCLASS=
val SCE_CSS_PSEUDOELEMENT=
val SCE_CSS_FUNCTION=
val SCE_CSS_PROPERTY=
val SCE_CSS_UNKNOWN_PROPERTY=
val SCE_CSS_UNKNOWN_PSEUDOCLASS=
val SCE_CSS_UNKNOWN_PSEUDOELEMENT=
val SCE_CSS_TAG=
val SCE_CSS_ID=
val SCE_CSS_CLASS=
val SCE_CSS_ATTRIBUTE=
val SCE_CSS_PLACEHOLDER=
# Lexical states for SCLEX_POV
#lex POV=SCLEX_POV SCE_POV_
#val SCE_POV_DEFAULT=0
#val SCE_POV_COMMENT=1
#val SCE_POV_COMMENTLINE=2
#val SCE_POV_NUMBER=3
#val SCE_POV_OPERATOR=4
#val SCE_POV_IDENTIFIER=5
#val SCE_POV_STRING=6
#val SCE_POV_STRINGEOL=7
#val SCE_POV_DIRECTIVE=8
#val SCE_POV_BADDIRECTIVE=9
#val SCE_POV_WORD2=10
#val SCE_POV_WORD3=11
#val SCE_POV_WORD4=12
#val SCE_POV_WORD5=13
#val SCE_POV_WORD6=14
#val SCE_POV_WORD7=15
#val SCE_POV_WORD8=16
# Lexical states for SCLEX_LOUT
#lex LOUT=SCLEX_LOUT SCE_LOUT_
#val SCE_LOUT_DEFAULT=0
#val SCE_LOUT_COMMENT=1
#val SCE_LOUT_NUMBER=2
#val SCE_LOUT_WORD=3
#val SCE_LOUT_WORD2=4
#val SCE_LOUT_WORD3=5
#val SCE_LOUT_WORD4=6
#val SCE_LOUT_STRING=7
#val SCE_LOUT_OPERATOR=8
#val SCE_LOUT_IDENTIFIER=9
#val SCE_LOUT_STRINGEOL=10
# Lexical states for SCLEX_ESCRIPT
#lex ESCRIPT=SCLEX_ESCRIPT SCE_ESCRIPT_
#val SCE_ESCRIPT_DEFAULT=0
#val SCE_ESCRIPT_COMMENT=1
#val SCE_ESCRIPT_COMMENTLINE=2
#val SCE_ESCRIPT_COMMENTDOC=3
#val SCE_ESCRIPT_NUMBER=4
#val SCE_ESCRIPT_WORD=5
#val SCE_ESCRIPT_STRING=6
#val SCE_ESCRIPT_OPERATOR=7
#val SCE_ESCRIPT_IDENTIFIER=8
#val SCE_ESCRIPT_BRACE=9
#val SCE_ESCRIPT_WORD2=10
#val SCE_ESCRIPT_WORD3=11
# Lexical states for SCLEX_PS
#lex PS=SCLEX_PS SCE_PS_
#val SCE_PS_DEFAULT=0
#val SCE_PS_COMMENT=1
#val SCE_PS_DSC_COMMENT=2
#val SCE_PS_DSC_VALUE=3
#val SCE_PS_NUMBER=4
#val SCE_PS_NAME=5
#val SCE_PS_KEYWORD=6
#val SCE_PS_LITERAL=7
#val SCE_PS_IMMEVAL=8
#val SCE_PS_PAREN_ARRAY=9
#val SCE_PS_PAREN_DICT=10
#val SCE_PS_PAREN_PROC=11
#val SCE_PS_TEXT=12
#val SCE_PS_HEXSTRING=13
#val SCE_PS_BASE85STRING=14
#val SCE_PS_BADSTRINGCHAR=15
# Lexical states for SCLEX_NSIS
lex NSIS=SCLEX_NSIS SCE_NSIS_
val SCE_NSIS_DEFAULT=0
val SCE_NSIS_COMMENT=1
val SCE_NSIS_COMMENTLINE=2
val SCE_NSIS_TASKMARKER=3
val SCE_NSIS_IDENTIFIER=4
val SCE_NSIS_WORD=5
val SCE_NSIS_PREPROCESSOR=6
val SCE_NSIS_OPERATOR=7
val SCE_NSIS_NUMBER=8
val SCE_NSIS_STRINGDQ=9
val SCE_NSIS_STRINGSQ=10
val SCE_NSIS_STRINGBT=11
val SCE_NSIS_ESCAPECHAR=12
val SCE_NSIS_VARIABLE=13
val SCE_NSIS_VARIABLE_BRACE=14
val SCE_NSIS_VARIABLE_PAREN=15
val SCE_NSIS_LABEL=16
val SCE_NSIS_INSTRUCTION=17
#val SCE_NSIS_FUNCTION=5
#val SCE_NSIS_USERDEFINED=8
#val SCE_NSIS_SECTIONDEF=9
#val SCE_NSIS_SUBSECTIONDEF=10
#val SCE_NSIS_IFDEFINEDEF=11
#val SCE_NSIS_MACRODEF=12
#val SCE_NSIS_STRINGVAR=13
#val SCE_NSIS_SECTIONGROUP=15
#val SCE_NSIS_PAGEEX=16
#val SCE_NSIS_FUNCTIONDEF=17
#val SCE_NSIS_COMMENTBOX=18
# Lexical states for SCLEX_MMIXAL
#lex MMIXAL=SCLEX_MMIXAL SCE_MMIXAL_
#val SCE_MMIXAL_LEADWS=0
#val SCE_MMIXAL_COMMENT=1
#val SCE_MMIXAL_LABEL=2
#val SCE_MMIXAL_OPCODE=3
#val SCE_MMIXAL_OPCODE_PRE=4
#val SCE_MMIXAL_OPCODE_VALID=5
#val SCE_MMIXAL_OPCODE_UNKNOWN=6
#val SCE_MMIXAL_OPCODE_POST=7
#val SCE_MMIXAL_OPERANDS=8
#val SCE_MMIXAL_NUMBER=9
#val SCE_MMIXAL_REF=10
#val SCE_MMIXAL_CHAR=11
#val SCE_MMIXAL_STRING=12
#val SCE_MMIXAL_REGISTER=13
#val SCE_MMIXAL_HEX=14
#val SCE_MMIXAL_OPERATOR=15
#val SCE_MMIXAL_SYMBOL=16
#val SCE_MMIXAL_INCLUDE=17
# Lexical states for SCLEX_CLW
#lex Clarion=SCLEX_CLW SCE_CLW_
#val SCE_CLW_DEFAULT=0
#val SCE_CLW_LABEL=1
#val SCE_CLW_COMMENT=2
#val SCE_CLW_STRING=3
#val SCE_CLW_USER_IDENTIFIER=4
#val SCE_CLW_INTEGER_CONSTANT=5
#val SCE_CLW_REAL_CONSTANT=6
#val SCE_CLW_PICTURE_STRING=7
#val SCE_CLW_KEYWORD=8
#val SCE_CLW_COMPILER_DIRECTIVE=9
#val SCE_CLW_RUNTIME_EXPRESSIONS=10
#val SCE_CLW_BUILTIN_PROCEDURES_FUNCTION=11
#val SCE_CLW_STRUCTURE_DATA_TYPE=12
#val SCE_CLW_ATTRIBUTE=13
#val SCE_CLW_STANDARD_EQUATE=14
#val SCE_CLW_ERROR=15
#val SCE_CLW_DEPRECATED=16
# Lexical states for SCLEX_LOT
#lex LOT=SCLEX_LOT SCE_LOT_
#val SCE_LOT_DEFAULT=0
#val SCE_LOT_HEADER=1
#val SCE_LOT_BREAK=2
#val SCE_LOT_SET=3
#val SCE_LOT_PASS=4
#val SCE_LOT_FAIL=5
#val SCE_LOT_ABORT=6
# Lexical states for SCLEX_YAML
lex YAML=SCLEX_YAML SCE_YAML_
val SCE_YAML_DEFAULT=0
val SCE_YAML_COMMENT=1
val SCE_YAML_IDENTIFIER=2
val SCE_YAML_KEYWORD=3
val SCE_YAML_NUMBER=4
val SCE_YAML_ANCHOR=5
val SCE_YAML_ALIAS=6
val SCE_YAML_TEXT=7
val SCE_YAML_ERROR=8
val SCE_YAML_OPERATOR=9
val SCE_YAML_DIRECTIVE=10
val SCE_YAML_STRING_SQ=11
val SCE_YAML_STRING_DQ=12
val SCE_YAML_ESCAPECHAR=13
val SCE_YAML_KEY=14
val SCE_YAML_BLOCK_SCALAR=15
val SCE_YAML_TAG=16
val SCE_YAML_VERBATIM_TAG=17
val SCE_YAML_DATETIME=18
val SCE_YAML_INDENTED_TEXT=19
val SCE_YAML_DOCUMENT=20
# Lexical states for SCLEX_TEX
#lex TeX=SCLEX_TEX SCE_TEX_
#val SCE_TEX_DEFAULT=0
#val SCE_TEX_SPECIAL=1
#val SCE_TEX_GROUP=2
#val SCE_TEX_SYMBOL=3
#val SCE_TEX_COMMAND=4
#val SCE_TEX_TEXT=5
#lex Metapost=SCLEX_METAPOST SCE_METAPOST_
#val SCE_METAPOST_DEFAULT=0
#val SCE_METAPOST_SPECIAL=1
#val SCE_METAPOST_GROUP=2
#val SCE_METAPOST_SYMBOL=3
#val SCE_METAPOST_COMMAND=4
#val SCE_METAPOST_TEXT=5
#val SCE_METAPOST_EXTRA=6
# Lexical states for SCLEX_ERLANG
#lex Erlang=SCLEX_ERLANG SCE_ERLANG_
#val SCE_ERLANG_DEFAULT=0
#val SCE_ERLANG_COMMENT=1
#val SCE_ERLANG_VARIABLE=2
#val SCE_ERLANG_NUMBER=3
#val SCE_ERLANG_KEYWORD=4
#val SCE_ERLANG_STRING=5
#val SCE_ERLANG_OPERATOR=6
#val SCE_ERLANG_ATOM=7
#val SCE_ERLANG_FUNCTION_NAME=8
#val SCE_ERLANG_CHARACTER=9
#val SCE_ERLANG_MACRO=10
#val SCE_ERLANG_RECORD=11
#val SCE_ERLANG_PREPROC=12
#val SCE_ERLANG_NODE_NAME=13
#val SCE_ERLANG_COMMENT_FUNCTION=14
#val SCE_ERLANG_COMMENT_MODULE=15
#val SCE_ERLANG_COMMENT_DOC=16
#val SCE_ERLANG_COMMENT_DOC_MACRO=17
#val SCE_ERLANG_ATOM_QUOTED=18
#val SCE_ERLANG_MACRO_QUOTED=19
#val SCE_ERLANG_RECORD_QUOTED=20
#val SCE_ERLANG_NODE_NAME_QUOTED=21
#val SCE_ERLANG_BIFS=22
#val SCE_ERLANG_MODULES=23
#val SCE_ERLANG_MODULES_ATT=24
#val SCE_ERLANG_UNKNOWN=31
# Lexical states for SCLEX_OCTAVE are identical to Matlab
#lex Octave=SCLEX_OCTAVE SCE_MAT_
# Lexical states for SCLEX_MSSQL
#lex MSSQL=SCLEX_MSSQL SCE_MSSQL_
#val SCE_MSSQL_DEFAULT=0
#val SCE_MSSQL_COMMENT=1
#val SCE_MSSQL_LINE_COMMENT=2
#val SCE_MSSQL_NUMBER=3
#val SCE_MSSQL_STRING=4
#val SCE_MSSQL_OPERATOR=5
#val SCE_MSSQL_IDENTIFIER=6
#val SCE_MSSQL_VARIABLE=7
#val SCE_MSSQL_COLUMN_NAME=8
#val SCE_MSSQL_STATEMENT=9
#val SCE_MSSQL_DATATYPE=10
#val SCE_MSSQL_SYSTABLE=11
#val SCE_MSSQL_GLOBAL_VARIABLE=12
#val SCE_MSSQL_FUNCTION=13
#val SCE_MSSQL_STORED_PROCEDURE=14
#val SCE_MSSQL_DEFAULT_PREF_DATATYPE=15
#val SCE_MSSQL_COLUMN_NAME_2=16
# Lexical states for SCLEX_VERILOG
lex Verilog=SCLEX_VERILOG SCE_V_
val SCE_V_DEFAULT=
val SCE_V_COMMENTLINE=
val SCE_V_COMMENTLINEDOC=
val SCE_V_COMMENTBLOCK=
val SCE_V_COMMENTBLOCKDOC=
val SCE_V_COMMENTBLOCKVSD=
val SCE_V_TASKMARKER=
val SCE_V_OPERATOR=
val SCE_V_NUMBER=
val SCE_V_STRING=
val SCE_V_ESCAPECHAR=
val SCE_V_FORMAT_SPECIFIER=
val SCE_V_ESCAPE_IDENTIFIER=
val SCE_V_IDENTIFIER=
val SCE_V_SYSTEM_TASK=
val SCE_V_DIRECTIVE=
val SCE_V_FOLDING_KEYWORD=
val SCE_V_KEYWORD=
val SCE_V_DATATYPE=
val SCE_V_MACRO=
val SCE_V_MODULE=
val SCE_V_CLASS=
val SCE_V_INTERFACE=
val SCE_V_ATTRIBUTE=
val SCE_V_EVENT=
val SCE_V_FUNCTION_DEFINITION=
val SCE_V_FUNCTION=
val SCE_V_LABEL=
# Lexical states for SCLEX_KIX
#lex Kix=SCLEX_KIX SCE_KIX_
#val SCE_KIX_DEFAULT=0
#val SCE_KIX_COMMENT=1
#val SCE_KIX_STRING1=2
#val SCE_KIX_STRING2=3
#val SCE_KIX_NUMBER=4
#val SCE_KIX_VAR=5
#val SCE_KIX_MACRO=6
#val SCE_KIX_KEYWORD=7
#val SCE_KIX_FUNCTIONS=8
#val SCE_KIX_OPERATOR=9
#val SCE_KIX_IDENTIFIER=31
# Lexical states for SCLEX_GUI4CLI
#val SCE_GC_DEFAULT=0
#val SCE_GC_COMMENTLINE=1
#val SCE_GC_COMMENTBLOCK=2
#val SCE_GC_GLOBAL=3
#val SCE_GC_EVENT=4
#val SCE_GC_ATTRIBUTE=5
#val SCE_GC_CONTROL=6
#val SCE_GC_COMMAND=7
#val SCE_GC_STRING=8
#val SCE_GC_OPERATOR=9
# Lexical states for SCLEX_SPECMAN
#lex Specman=SCLEX_SPECMAN SCE_SN_
#val SCE_SN_DEFAULT=0
#val SCE_SN_CODE=1
#val SCE_SN_COMMENTLINE=2
#val SCE_SN_COMMENTLINEBANG=3
#val SCE_SN_NUMBER=4
#val SCE_SN_WORD=5
#val SCE_SN_STRING=6
#val SCE_SN_WORD2=7
#val SCE_SN_WORD3=8
#val SCE_SN_PREPROCESSOR=9
#val SCE_SN_OPERATOR=10
#val SCE_SN_IDENTIFIER=11
#val SCE_SN_STRINGEOL=12
#val SCE_SN_REGEXTAG=13
#val SCE_SN_SIGNAL=14
#val SCE_SN_USER=19
# Lexical states for SCLEX_AUTOIT3
lex AutoIt3=SCLEX_AUTOIT3 SCE_AU3_
val SCE_AU3_DEFAULT=0
val SCE_AU3_COMMENT=1
val SCE_AU3_COMMENTBLOCK=2
val SCE_AU3_NUMBER=3
val SCE_AU3_FUNCTION=4
val SCE_AU3_KEYWORD=5
val SCE_AU3_MACRO=6
val SCE_AU3_STRING=7
val SCE_AU3_OPERATOR=8
val SCE_AU3_VARIABLE=9
val SCE_AU3_SENT=10
val SCE_AU3_PREPROCESSOR=11
val SCE_AU3_SPECIAL=12
val SCE_AU3_EXPAND=13
val SCE_AU3_COMOBJ=14
val SCE_AU3_UDF=15
# Lexical states for SCLEX_APDL
lex APDL=SCLEX_APDL SCE_APDL_
val SCE_APDL_DEFAULT=0
val SCE_APDL_COMMENT=1
val SCE_APDL_WORD=2
val SCE_APDL_NUMBER=3
val SCE_APDL_STRING=4
val SCE_APDL_OPERATOR=5
val SCE_APDL_PROCESSOR=6
val SCE_APDL_IDENTIFIER=7
val SCE_APDL_COMMAND=8
val SCE_APDL_SLASHCOMMAND=9
val SCE_APDL_STARCOMMAND=10
val SCE_APDL_ARGUMENT=11
val SCE_APDL_FUNCTION=12
# Lexical states for SCLEX_BASH
lex Bash=SCLEX_BASH SCE_SH_
val SCE_SH_DEFAULT=
val SCE_SH_COMMENTLINE=
val SCE_SH_OPERATOR=
val SCE_SH_NUMBER=
val SCE_SH_IDENTIFIER=
val SCE_SH_WORD=
val SCE_SH_SCALAR=
val SCE_SH_HERE_DELIM=
val SCE_SH_HERE_Q=
val SCE_SH_STRING_SQ=
val SCE_SH_STRING_DQ=
val SCE_SH_PARAM=
val SCE_SH_BACKTICKS=
val SCE_SH_ERROR=
val SCE_SH_FUNCTION=
# Lexical states for SCLEX_ASN1
#lex Asn1=SCLEX_ASN1 SCE_ASN1_
#val SCE_ASN1_DEFAULT=0
#val SCE_ASN1_COMMENT=1
#val SCE_ASN1_IDENTIFIER=2
#val SCE_ASN1_STRING=3
#val SCE_ASN1_OID=4
#val SCE_ASN1_SCALAR=5
#val SCE_ASN1_KEYWORD=6
#val SCE_ASN1_ATTRIBUTE=7
#val SCE_ASN1_DESCRIPTOR=8
#val SCE_ASN1_TYPE=9
#val SCE_ASN1_OPERATOR=10
# Lexical states for SCLEX_VHDL
lex VHDL=SCLEX_VHDL SCE_VHDL_
val SCE_VHDL_DEFAULT=
val SCE_VHDL_COMMENTLINE=
val SCE_VHDL_COMMENTLINEDOC=
val SCE_VHDL_COMMENTBLOCK=
val SCE_VHDL_COMMENTBLOCKDOC=
val SCE_VHDL_TASKMARKER=
val SCE_VHDL_NUMBER=
val SCE_VHDL_CHARACTER=
val SCE_VHDL_STRING=
val SCE_VHDL_OPERATOR=
val SCE_VHDL_OPERATOR2=
val SCE_VHDL_ESCAPE_IDENTIFIER=
val SCE_VHDL_IDENTIFIER=
val SCE_VHDL_ATTRIBUTE=
val SCE_VHDL_DIRECTIVE=
val SCE_VHDL_FOLDING_KEYWORD=
val SCE_VHDL_KEYWORD=
val SCE_VHDL_KEYWORD_DEMOTED=
val SCE_VHDL_STDFUNCTION=
val SCE_VHDL_STDTYPE=
val SCE_VHDL_PACKAGE=
val SCE_VHDL_TYPE=
val SCE_VHDL_CONSTANT=
val SCE_VHDL_FUNCTION_DEFINITION=
val SCE_VHDL_FUNCTION=
val SCE_VHDL_LABEL=
# Lexical states for SCLEX_OCAML
lex OCaml=SCLEX_OCAML SCE_OCAML_
val SCE_OCAML_DEFAULT=
val SCE_OCAML_COMMENT=
val SCE_OCAML_IDENTIFIER=
val SCE_OCAML_TAGNAME=
val SCE_OCAML_ATTRIBUTE=
val SCE_OCAML_OPERATOR=
val SCE_OCAML_NUMBER=
val SCE_OCAML_CHARACTER=
val SCE_OCAML_STRING=
val SCE_OCAML_QUOTED_STRING=
val SCE_OCAML_QUOTED_STRINGID=
val SCE_OCAML_ESCAPECHAR=
val SCE_OCAML_FORMAT_SPECIFIER=
val SCE_OCAML_KEYWORD=
val SCE_OCAML_TYPE=
# Lexical states for SCLEX_HASKELL
lex Haskell=SCLEX_HASKELL SCE_HA_
val SCE_HA_DEFAULT=
val SCE_HA_COMMENTLINE=
val SCE_HA_COMMENTBLOCK=
val SCE_HA_NUMBER=
val SCE_HA_OPERATOR=
val SCE_HA_PRAGMA=
val SCE_HA_CHARACTER=
val SCE_HA_STRING=
val SCE_HA_ESCAPECHAR=
val SCE_HA_PREPROCESSOR=
val SCE_HA_IDENTIFIER=
val SCE_HA_KEYWORD=
val SCE_HA_MODULE=
val SCE_HA_CLASS=
# Lexical states of SCLEX_TADS3
#lex TADS3=SCLEX_TADS3 SCE_T3_
#val SCE_T3_DEFAULT=0
#val SCE_T3_X_DEFAULT=1
#val SCE_T3_PREPROCESSOR=2
#val SCE_T3_BLOCK_COMMENT=3
#val SCE_T3_LINE_COMMENT=4
#val SCE_T3_OPERATOR=5
#val SCE_T3_KEYWORD=6
#val SCE_T3_NUMBER=7
#val SCE_T3_IDENTIFIER=8
#val SCE_T3_S_STRING=9
#val SCE_T3_D_STRING=10
#val SCE_T3_X_STRING=11
#val SCE_T3_LIB_DIRECTIVE=12
#val SCE_T3_MSG_PARAM=13
#val SCE_T3_HTML_TAG=14
#val SCE_T3_HTML_DEFAULT=15
#val SCE_T3_HTML_STRING=16
#val SCE_T3_USER1=17
#val SCE_T3_USER2=18
#val SCE_T3_USER3=19
#val SCE_T3_BRACE=20
# Lexical states for SCLEX_REBOL
lex Rebol=SCLEX_REBOL SCE_REBOL_
val SCE_REBOL_DEFAULT=0
val SCE_REBOL_COMMENTLINE=1
val SCE_REBOL_COMMENTBLOCK=2
val SCE_REBOL_BINARYCOMMENT=3
val SCE_REBOL_TASKMARKER=4
val SCE_REBOL_PREFACE=5
val SCE_REBOL_OPERATOR=6
val SCE_REBOL_BRACEDSTRING=7
val SCE_REBOL_CHARACTER=8
val SCE_REBOL_QUOTEDSTRING=9
val SCE_REBOL_TAG_VALUE=10
val SCE_REBOL_QUOTEDFILE=11
val SCE_REBOL_NUMBER=12
val SCE_REBOL_PAIR=13
val SCE_REBOL_TUPLE=14
val SCE_REBOL_MONEY=15
val SCE_REBOL_DATE=16
val SCE_REBOL_TIME=17
val SCE_REBOL_ESCAPECHAR=18
val SCE_REBOL_BINARY=19
val SCE_REBOL_ISSUE=20
val SCE_REBOL_SYMBOL=21
val SCE_REBOL_TAG=22
val SCE_REBOL_TAG_ATTR=23
val SCE_REBOL_FILE=24
val SCE_REBOL_EMAIL=25
val SCE_REBOL_URL=26
val SCE_REBOL_IDENTIFIER=27
val SCE_REBOL_WORD=28
val SCE_REBOL_DIRECTIVE=29
val SCE_REBOL_TYPE=30
val SCE_REBOL_PROPERTY=31
val SCE_REBOL_MACRO=40
# Lexical states for SCLEX_SQL
lex SQL=SCLEX_SQL SCE_SQL_
val SCE_SQL_DEFAULT=
val SCE_SQL_COMMENT=
val SCE_SQL_COMMENTDOC=
val SCE_SQL_COMMENTLINE=
val SCE_SQL_COMMENTLINEDOC=
#val SCE_SQL_COMMENTDOCKEYWORD=
#val SCE_SQL_COMMENTDOCKEYWORDERROR=
#val SCE_SQL_SQLPLUS_COMMENT=
#val SCE_SQL_SQLPLUS=
#val SCE_SQL_SQLPLUS_PROMPT=
val SCE_SQL_NUMBER=
val SCE_SQL_WORD=
val SCE_SQL_STRING_DQ=
val SCE_SQL_STRING_SQ=
val SCE_SQL_ESCAPECHAR=
val SCE_SQL_HEX2=
val SCE_SQL_BIT2=
val SCE_SQL_HEX=
val SCE_SQL_BIT=
val SCE_SQL_OPERATOR=
val SCE_SQL_IDENTIFIER=
val SCE_SQL_WORD2=
val SCE_SQL_USER1=
val SCE_SQL_USER2=
val SCE_SQL_USER3=
val SCE_SQL_USER4=
val SCE_SQL_QUOTEDIDENTIFIER=
val SCE_SQL_VARIABLE=
val SCE_SQL_QOPERATOR=
# Lexical states for SCLEX_SMALLTALK
#lex Smalltalk=SCLEX_SMALLTALK SCE_ST_
#val SCE_ST_DEFAULT=0
#val SCE_ST_STRING=1
#val SCE_ST_NUMBER=2
#val SCE_ST_COMMENT=3
#val SCE_ST_SYMBOL=4
#val SCE_ST_BINARY=5
#val SCE_ST_BOOL=6
#val SCE_ST_SELF=7
#val SCE_ST_SUPER=8
#val SCE_ST_NIL=9
#val SCE_ST_GLOBAL=10
#val SCE_ST_RETURN=11
#val SCE_ST_SPECIAL=12
#val SCE_ST_KWSEND=13
#val SCE_ST_ASSIGN=14
#val SCE_ST_CHARACTER=15
#val SCE_ST_SPEC_SEL=16
# Lexical states for SCLEX_FLAGSHIP (clipper)
#lex FlagShip=SCLEX_FLAGSHIP SCE_FS_
#val SCE_FS_DEFAULT=0
#val SCE_FS_COMMENT=1
#val SCE_FS_COMMENTLINE=2
#val SCE_FS_COMMENTDOC=3
#val SCE_FS_COMMENTLINEDOC=4
#val SCE_FS_COMMENTDOCKEYWORD=5
#val SCE_FS_COMMENTDOCKEYWORDERROR=6
#val SCE_FS_KEYWORD=7
#val SCE_FS_KEYWORD2=8
#val SCE_FS_KEYWORD3=9
#val SCE_FS_KEYWORD4=10
#val SCE_FS_NUMBER=11
#val SCE_FS_STRING=12
#val SCE_FS_PREPROCESSOR=13
#val SCE_FS_OPERATOR=14
#val SCE_FS_IDENTIFIER=15
#val SCE_FS_DATE=16
#val SCE_FS_STRINGEOL=17
#val SCE_FS_CONSTANT=18
#val SCE_FS_WORDOPERATOR=19
#val SCE_FS_DISABLEDCODE=20
#val SCE_FS_DEFAULT_C=21
#val SCE_FS_COMMENTDOC_C=22
#val SCE_FS_COMMENTLINEDOC_C=23
#val SCE_FS_KEYWORD_C=24
#val SCE_FS_KEYWORD2_C=25
#val SCE_FS_NUMBER_C=26
#val SCE_FS_STRING_C=27
#val SCE_FS_PREPROCESSOR_C=28
#val SCE_FS_OPERATOR_C=29
#val SCE_FS_IDENTIFIER_C=30
#val SCE_FS_STRINGEOL_C=31
# Lexical states for SCLEX_CSOUND
#lex Csound=SCLEX_CSOUND SCE_CSOUND_
#val SCE_CSOUND_DEFAULT=0
#val SCE_CSOUND_COMMENT=1
#val SCE_CSOUND_NUMBER=2
#val SCE_CSOUND_OPERATOR=3
#val SCE_CSOUND_INSTR=4
#val SCE_CSOUND_IDENTIFIER=5
#val SCE_CSOUND_OPCODE=6
#val SCE_CSOUND_HEADERSTMT=7
#val SCE_CSOUND_USERKEYWORD=8
#val SCE_CSOUND_COMMENTBLOCK=9
#val SCE_CSOUND_PARAM=10
#val SCE_CSOUND_ARATE_VAR=11
#val SCE_CSOUND_KRATE_VAR=12
#val SCE_CSOUND_IRATE_VAR=13
#val SCE_CSOUND_GLOBAL_VAR=14
#val SCE_CSOUND_STRINGEOL=15
# Lexical states for SCLEX_INNOSETUP
lex InnoSetup=SCLEX_INNOSETUP SCE_INNO_
val SCE_INNO_DEFAULT=0
val SCE_INNO_COMMENT=1
val SCE_INNO_ISPP_COMMENTBLOCK=2
val SCE_INNO_PASCAL_COMMENTPAREN=3
val SCE_INNO_PASCAL_COMMENTBRACE=4
val SCE_INNO_TASKMARKER=5
val SCE_INNO_SECTION=6
val SCE_INNO_PARAMETER=7
val SCE_INNO_PLACEHOLDER=8
val SCE_INNO_CONSTANT=10
val SCE_INNO_INLINE_EXPANSION=11
val SCE_INNO_IDENTIFIER=12
val SCE_INNO_PREPROCESSOR=13
val SCE_INNO_NUMBER=14
val SCE_INNO_KEYWORD=15
val SCE_INNO_PASCAL_KEYWORD=16
val SCE_INNO_PASCAL_TYPE=17
val SCE_INNO_FUNCTION=18
val SCE_INNO_STRING_DQ=19
val SCE_INNO_STRING_SQ=20
val SCE_INNO_STRING_ANGLE=21
val SCE_INNO_PREPROCESSOR_MESSAGE=
val SCE_INNO_OPERATOR=
val SCE_INNO_PREPROCESSOR_WORD=
# Lexical states for SCLEX_OPAL
#lex Opal=SCLEX_OPAL SCE_OPAL_
#val SCE_OPAL_SPACE=0
#val SCE_OPAL_COMMENT_BLOCK=1
#val SCE_OPAL_COMMENT_LINE=2
#val SCE_OPAL_INTEGER=3
#val SCE_OPAL_KEYWORD=4
#val SCE_OPAL_SORT=5
#val SCE_OPAL_STRING=6
#val SCE_OPAL_PAR=7
#val SCE_OPAL_BOOL_CONST=8
#val SCE_OPAL_DEFAULT=9
# Lexical states for SCLEX_SPICE
#lex Spice=SCLEX_SPICE SCE_SPICE_
#val SCE_SPICE_DEFAULT=0
#val SCE_SPICE_IDENTIFIER=1
#val SCE_SPICE_KEYWORD=2
#val SCE_SPICE_KEYWORD2=3
#val SCE_SPICE_KEYWORD3=4
#val SCE_SPICE_NUMBER=5
#val SCE_SPICE_DELIMITER=6
#val SCE_SPICE_VALUE=7
#val SCE_SPICE_COMMENTLINE=8
# Lexical states for SCLEX_CMAKE
lex CMAKE=SCLEX_CMAKE SCE_CMAKE_
val SCE_CMAKE_DEFAULT=
val SCE_CMAKE_COMMENT=
val SCE_CMAKE_BLOCK_COMMENT=
val SCE_CMAKE_TASKMARKER=
val SCE_CMAKE_IDENTIFIER=
val SCE_CMAKE_WORD=
val SCE_CMAKE_COMMANDS=
val SCE_CMAKE_OPERATOR=
val SCE_CMAKE_STRING=
val SCE_CMAKE_BRACKET_ARGUMENT=
val SCE_CMAKE_VARIABLE_AT=
val SCE_CMAKE_VARIABLE_DOLLAR=
val SCE_CMAKE_PARAMETERS=
val SCE_CMAKE_VARIABLE=
val SCE_CMAKE_FUNCATION=
val SCE_CMAKE_MACRO=
val SCE_CMAKE_NUMBER=
val SCE_CMAKE_ESCAPECHAR=
val SCE_CMAKE_LINE_CONTINUE=
val SCE_CMAKE_PROPERTIES=
val SCE_CMAKE_VALUES=
# Lexical states for SCLEX_GAP
#lex Gap=SCLEX_GAP SCE_GAP_
#val SCE_GAP_DEFAULT=0
#val SCE_GAP_IDENTIFIER=1
#val SCE_GAP_KEYWORD=2
#val SCE_GAP_KEYWORD2=3
#val SCE_GAP_KEYWORD3=4
#val SCE_GAP_KEYWORD4=5
#val SCE_GAP_STRING=6
#val SCE_GAP_CHAR=7
#val SCE_GAP_OPERATOR=8
#val SCE_GAP_COMMENT=9
#val SCE_GAP_NUMBER=10
#val SCE_GAP_STRINGEOL=11
# Lexical state for SCLEX_PLM
#lex PLM=SCLEX_PLM SCE_PLM_
#val SCE_PLM_DEFAULT=0
#val SCE_PLM_COMMENT=1
#val SCE_PLM_STRING=2
#val SCE_PLM_NUMBER=3
#val SCE_PLM_IDENTIFIER=4
#val SCE_PLM_OPERATOR=5
#val SCE_PLM_CONTROL=6
#val SCE_PLM_KEYWORD=7
# Lexical state for SCLEX_PROGRESS
#lex Progress=SCLEX_PROGRESS SCE_ABL_
#val SCE_ABL_DEFAULT=0
#val SCE_ABL_NUMBER=1
#val SCE_ABL_WORD=2
#val SCE_ABL_STRING=3
#val SCE_ABL_CHARACTER=4
#val SCE_ABL_PREPROCESSOR=5
#val SCE_ABL_OPERATOR=6
#val SCE_ABL_IDENTIFIER=7
#val SCE_ABL_BLOCK=8
#val SCE_ABL_END=9
#val SCE_ABL_COMMENT=10
#val SCE_ABL_TASKMARKER=11
#val SCE_ABL_LINECOMMENT=12
# Lexical states for SCLEX_ABAQUS
#lex ABAQUS=SCLEX_ABAQUS SCE_ABAQUS_
#val SCE_ABAQUS_DEFAULT=0
#val SCE_ABAQUS_COMMENT=1
#val SCE_ABAQUS_COMMENTBLOCK=2
#val SCE_ABAQUS_NUMBER=3
#val SCE_ABAQUS_STRING=4
#val SCE_ABAQUS_OPERATOR=5
#val SCE_ABAQUS_WORD=6
#val SCE_ABAQUS_PROCESSOR=7
#val SCE_ABAQUS_COMMAND=8
#val SCE_ABAQUS_SLASHCOMMAND=9
#val SCE_ABAQUS_STARCOMMAND=10
#val SCE_ABAQUS_ARGUMENT=11
#val SCE_ABAQUS_FUNCTION=12
# Lexical states for SCLEX_ASYMPTOTE
lex Asymptote=SCLEX_ASYMPTOTE SCE_ASY_
val SCE_ASY_DEFAULT=
val SCE_ASY_COMMENTLINE=
val SCE_ASY_COMMENTBLOCK=
val SCE_ASY_TASKMARKER=
val SCE_ASY_OPERATOR=
val SCE_ASY_NUMBER=
val SCE_ASY_IDENTIFIER=
val SCE_ASY_STRING_SQ=
val SCE_ASY_STRING_DQ=
val SCE_ASY_ESCAPECHAR=
val SCE_ASY_WORD=
val SCE_ASY_TYPE=
val SCE_ASY_STRUCT=
val SCE_ASY_CONSTANT=
val SCE_ASY_FUNCTION=
val SCE_ASY_FUNCTION_DEFINITION=
# Lexical states for SCLEX_R
lex RLang=SCLEX_RLANG SCE_R_
val SCE_R_DEFAULT=
val SCE_R_COMMENT=
val SCE_R_TASKMARKER=
val SCE_R_NUMBER=
val SCE_R_IDENTIFIER=
val SCE_R_OPERATOR=
val SCE_R_INFIX=
val SCE_R_BACKTICKS=
val SCE_R_STRING_SQ=
val SCE_R_STRING_DQ=
val SCE_R_RAWSTRING_SQ=
val SCE_R_RAWSTRING_DQ=
val SCE_R_ESCAPECHAR=
val SCE_R_FORMAT_SPECIFIER=
val SCE_R_KEYWORD=
val SCE_R_DIRECTIVE=
val SCE_R_FUNCTION=
# Lexical state for SCLEX_MAGIK
#lex MagikSF=SCLEX_MAGIK SCE_MAGIK_
#val SCE_MAGIK_DEFAULT=0
#val SCE_MAGIK_COMMENT=1
#val SCE_MAGIK_HYPER_COMMENT=16
#val SCE_MAGIK_STRING=2
#val SCE_MAGIK_CHARACTER=3
#val SCE_MAGIK_NUMBER=4
#val SCE_MAGIK_IDENTIFIER=5
#val SCE_MAGIK_OPERATOR=6
#val SCE_MAGIK_FLOW=7
#val SCE_MAGIK_CONTAINER=8
#val SCE_MAGIK_BRACKET_BLOCK=9
#val SCE_MAGIK_BRACE_BLOCK=10
#val SCE_MAGIK_SQBRACKET_BLOCK=11
#val SCE_MAGIK_UNKNOWN_KEYWORD=12
#val SCE_MAGIK_KEYWORD=13
#val SCE_MAGIK_PRAGMA=14
#val SCE_MAGIK_SYMBOL=15
# Lexical state for SCLEX_POWERSHELL
lex PowerShell=SCLEX_POWERSHELL SCE_POWERSHELL_
val SCE_POWERSHELL_DEFAULT=
val SCE_POWERSHELL_COMMENTLINE=
val SCE_POWERSHELL_COMMENTBLOCK=
val SCE_POWERSHELL_COMMENTTAG=
val SCE_POWERSHELL_DIRECTIVE=
val SCE_POWERSHELL_TASKMARKER=
val SCE_POWERSHELL_OPERATOR=
val SCE_POWERSHELL_OPERATOR2=
val SCE_POWERSHELL_ESCAPECHAR=
val SCE_POWERSHELL_STRING_SQ=
val SCE_POWERSHELL_HERE_STRING_SQ=
val SCE_POWERSHELL_STRING_DQ=11
val SCE_POWERSHELL_HERE_STRING_DQ=12
val SCE_POWERSHELL_VARIABLE=
val SCE_POWERSHELL_BRACE_VARIABLE=
val SCE_POWERSHELL_VARIABLE_SCOPE=
val SCE_POWERSHELL_BUILTIN_VARIABLE=
val SCE_POWERSHELL_NUMBER=
val SCE_POWERSHELL_IDENTIFIER=
val SCE_POWERSHELL_PARAMETER=
val SCE_POWERSHELL_LABEL=
val SCE_POWERSHELL_KEYWORD=
val SCE_POWERSHELL_CMDLET=
val SCE_POWERSHELL_ALIAS=
val SCE_POWERSHELL_CLASS=
val SCE_POWERSHELL_ENUM=
val SCE_POWERSHELL_TYPE=
val SCE_POWERSHELL_ATTRIBUTE=
val SCE_POWERSHELL_FUNCTION=
val SCE_POWERSHELL_FUNCTION_DEFINITION=
# Lexical state for SCLEX_MYSQL
#lex MySQL=SCLEX_MYSQL SCE_MYSQL_
#val SCE_MYSQL_DEFAULT=0
#val SCE_MYSQL_COMMENT=1
#val SCE_MYSQL_COMMENTLINE=2
#val SCE_MYSQL_VARIABLE=3
#val SCE_MYSQL_SYSTEMVARIABLE=4
#val SCE_MYSQL_KNOWNSYSTEMVARIABLE=5
#val SCE_MYSQL_NUMBER=6
#val SCE_MYSQL_MAJORKEYWORD=7
#val SCE_MYSQL_KEYWORD=8
#val SCE_MYSQL_DATABASEOBJECT=9
#val SCE_MYSQL_PROCEDUREKEYWORD=10
#val SCE_MYSQL_STRING=11
#val SCE_MYSQL_SQSTRING=12
#val SCE_MYSQL_DQSTRING=13
#val SCE_MYSQL_OPERATOR=14
#val SCE_MYSQL_FUNCTION=15
#val SCE_MYSQL_IDENTIFIER=16
#val SCE_MYSQL_QUOTEDIDENTIFIER=17
#val SCE_MYSQL_USER1=18
#val SCE_MYSQL_USER2=19
#val SCE_MYSQL_USER3=20
#val SCE_MYSQL_HIDDENCOMMAND=21
#val SCE_MYSQL_PLACEHOLDER=22
# Lexical state for SCLEX_PO
#lex Po=SCLEX_PO SCE_PO_
#val SCE_PO_DEFAULT=0
#val SCE_PO_COMMENT=1
#val SCE_PO_MSGID=2
#val SCE_PO_MSGID_TEXT=3
#val SCE_PO_MSGSTR=4
#val SCE_PO_MSGSTR_TEXT=5
#val SCE_PO_MSGCTXT=6
#val SCE_PO_MSGCTXT_TEXT=7
#val SCE_PO_FUZZY=8
#val SCE_PO_PROGRAMMER_COMMENT=9
#val SCE_PO_REFERENCE=10
#val SCE_PO_FLAGS=11
#val SCE_PO_MSGID_TEXT_EOL=12
#val SCE_PO_MSGSTR_TEXT_EOL=13
#val SCE_PO_MSGCTXT_TEXT_EOL=14
#val SCE_PO_ERROR=15
# Lexical states for SCLEX_PASCAL
lex Pascal=SCLEX_PASCAL SCE_PAS_
val SCE_PAS_DEFAULT=
val SCE_PAS_COMMENT=
val SCE_PAS_COMMENT2=
val SCE_PAS_COMMENTLINE=
val SCE_PAS_TASKMARKER=
val SCE_PAS_IDENTIFIER=
val SCE_PAS_PREPROCESSOR=
val SCE_PAS_PREPROCESSOR2=
val SCE_PAS_NUMBER=
val SCE_PAS_HEXNUMBER=
val SCE_PAS_WORD=
val SCE_PAS_OPERATOR=
val SCE_PAS_CHARACTER=
val SCE_PAS_STRING_DQ=
val SCE_PAS_STRINGEOL=
val SCE_PAS_ASM=
val SCE_PAS_TYPE=
val SCE_PAS_FUNCTION1=
val SCE_PAS_FUNCTION=
# Lexical state for SCLEX_SORCUS
#lex SORCUS=SCLEX_SORCUS SCE_SORCUS_
#val SCE_SORCUS_DEFAULT=0
#val SCE_SORCUS_COMMAND=1
#val SCE_SORCUS_PARAMETER=2
#val SCE_SORCUS_COMMENTLINE=3
#val SCE_SORCUS_STRING=4
#val SCE_SORCUS_STRINGEOL=5
#val SCE_SORCUS_IDENTIFIER=6
#val SCE_SORCUS_OPERATOR=7
#val SCE_SORCUS_NUMBER=8
#val SCE_SORCUS_CONSTANT=9
# Lexical state for SCLEX_POWERPRO
#lex PowerPro=SCLEX_POWERPRO SCE_POWERPRO_
#val SCE_POWERPRO_DEFAULT=0
#val SCE_POWERPRO_COMMENTBLOCK=1
#val SCE_POWERPRO_COMMENTLINE=2
#val SCE_POWERPRO_NUMBER=3
#val SCE_POWERPRO_WORD=4
#val SCE_POWERPRO_WORD2=5
#val SCE_POWERPRO_WORD3=6
#val SCE_POWERPRO_WORD4=7
#val SCE_POWERPRO_DOUBLEQUOTEDSTRING=8
#val SCE_POWERPRO_SINGLEQUOTEDSTRING=9
#val SCE_POWERPRO_LINECONTINUE=10
#val SCE_POWERPRO_OPERATOR=11
#val SCE_POWERPRO_IDENTIFIER=12
#val SCE_POWERPRO_STRINGEOL=13
#val SCE_POWERPRO_VERBATIM=14
#val SCE_POWERPRO_ALTQUOTE=15
#val SCE_POWERPRO_FUNCTION=16
# Lexical states for SCLEX_SML
#lex SML=SCLEX_SML SCE_SML_
#val SCE_SML_DEFAULT=0
#val SCE_SML_IDENTIFIER=1
#val SCE_SML_TAGNAME=2
#val SCE_SML_KEYWORD=3
#val SCE_SML_KEYWORD2=4
#val SCE_SML_KEYWORD3=5
#val SCE_SML_LINENUM=6
#val SCE_SML_OPERATOR=7
#val SCE_SML_NUMBER=8
#val SCE_SML_CHAR=9
#val SCE_SML_STRING=11
#val SCE_SML_COMMENT=12
#val SCE_SML_COMMENT1=13
#val SCE_SML_COMMENT2=14
#val SCE_SML_COMMENT3=15
# Lexical state for SCLEX_MARKDOWN
lex Markdown=SCLEX_MARKDOWN SCE_MARKDOWN_ SCE_H_
val SCE_MARKDOWN_DEFAULT=
# HTML and block styles
val SCE_MARKDOWN_HEADER1=40
val SCE_MARKDOWN_HEADER2=
val SCE_MARKDOWN_HEADER3=
val SCE_MARKDOWN_HEADER4=
val SCE_MARKDOWN_HEADER5=
val SCE_MARKDOWN_HEADER6=
val SCE_MARKDOWN_SETEXT_H1=
val SCE_MARKDOWN_SETEXT_H2=
val SCE_MARKDOWN_HRULE=
val SCE_MARKDOWN_DELIMITER_ROW=
val SCE_MARKDOWN_INDENTED_BLOCK=
val SCE_MARKDOWN_BACKTICK_BLOCK=
val SCE_MARKDOWN_BACKTICK_MATH=
val SCE_MARKDOWN_TILDE_BLOCK=
val SCE_MARKDOWN_TILDE_MATH=
val SCE_MARKDOWN_DISPLAY_MATH=
val SCE_MARKDOWN_BLOCKQUOTE=
val SCE_MARKDOWN_MULTI_BLOCKQUOTE=
val SCE_MARKDOWN_BULLET_LIST=
val SCE_MARKDOWN_ORDERED_LIST=
val SCE_MARKDOWN_DEFINITION_LIST=
val SCE_MARKDOWN_METADATA_YAML=
val SCE_MARKDOWN_METADATA_TOML=
val SCE_MARKDOWN_METADATA_JSON=
val SCE_MARKDOWN_TITLE_BLOCK=
# multiline inline styles
val SCE_MARKDOWN_EM_ASTERISK=
val SCE_MARKDOWN_EM_UNDERSCORE=
val SCE_MARKDOWN_STRONG_ASTERISK=
val SCE_MARKDOWN_STRONG_UNDERSCORE=
val SCE_MARKDOWN_STRIKEOUT=
val SCE_MARKDOWN_LINK_TEXT=
val SCE_MARKDOWN_ANGLE_LINK=
val SCE_MARKDOWN_PLAIN_LINK=
val SCE_MARKDOWN_PAREN_LINK=
val SCE_MARKDOWN_LINK_TITLE_PAREN=
val SCE_MARKDOWN_LINK_TITLE_SQ=
val SCE_MARKDOWN_LINK_TITLE_DQ=
val SCE_MARKDOWN_CODE_SPAN=
val SCE_MARKDOWN_MATH_SPAN=
val SCE_MARKDOWN_INLINE_DISPLAY_MATH=
val SCE_MARKDOWN_INLINE_MATH=
# single line inline styles
val SCE_MARKDOWN_ESCAPECHAR=
val SCE_MARKDOWN_DELIMITER=
val SCE_MARKDOWN_TASK_LIST=
val SCE_MARKDOWN_EXT_ORDERED_LIST=
val SCE_MARKDOWN_EMOJI=
val SCE_MARKDOWN_EXAMPLE_LIST=
val SCE_MARKDOWN_CITATION_AT=
val SCE_MARKDOWN_SUPERSCRIPT=
val SCE_MARKDOWN_SUBSCRIPT=
val SCE_MARKDOWN_SHORT_SUPERSCRIPT=
val SCE_MARKDOWN_SHORT_SUBSCRIPT=
val SCE_MARKDOWN_DIFF_ADD_CURLY=
val SCE_MARKDOWN_DIFF_ADD_SQUARE=
val SCE_MARKDOWN_DIFF_DEL_CURLY=
val SCE_MARKDOWN_DIFF_DEL_SQUARE=
val SCE_MARKDOWN_HARD_LINE_BREAK=
# Lexical state for SCLEX_TXT2TAGS
#lex Txt2tags=SCLEX_TXT2TAGS SCE_TXT2TAGS_
#val SCE_TXT2TAGS_DEFAULT=0
#val SCE_TXT2TAGS_LINE_BEGIN=1
#val SCE_TXT2TAGS_STRONG1=2
#val SCE_TXT2TAGS_STRONG2=3
#val SCE_TXT2TAGS_EM1=4
#val SCE_TXT2TAGS_EM2=5
#val SCE_TXT2TAGS_HEADER1=6
#val SCE_TXT2TAGS_HEADER2=7
#val SCE_TXT2TAGS_HEADER3=8
#val SCE_TXT2TAGS_HEADER4=9
#val SCE_TXT2TAGS_HEADER5=10
#val SCE_TXT2TAGS_HEADER6=11
#val SCE_TXT2TAGS_PRECHAR=12
#val SCE_TXT2TAGS_ULIST_ITEM=13
#val SCE_TXT2TAGS_OLIST_ITEM=14
#val SCE_TXT2TAGS_BLOCKQUOTE=15
#val SCE_TXT2TAGS_STRIKEOUT=16
#val SCE_TXT2TAGS_HRULE=17
#val SCE_TXT2TAGS_LINK=18
#val SCE_TXT2TAGS_CODE=19
#val SCE_TXT2TAGS_CODE2=20
#val SCE_TXT2TAGS_CODEBK=21
#val SCE_TXT2TAGS_COMMENT=22
#val SCE_TXT2TAGS_OPTION=23
#val SCE_TXT2TAGS_PREPROC=24
#val SCE_TXT2TAGS_POSTPROC=25
# Lexical states for SCLEX_AUTOHOTKEY
lex AutoHotkey=SCLEX_AUTOHOTKEY SCE_AHK_
val SCE_AHK_DEFAULT=
val SCE_AHK_COMMENTLINE=
val SCE_AHK_SECTION_COMMENT=
val SCE_AHK_COMMENTBLOCK=
val SCE_AHK_DIRECTIVE_AT=
val SCE_AHK_TASKMARKER=
val SCE_AHK_OPERATOR=
val SCE_AHK_NUMBER=
val SCE_AHK_IDENTIFIER=
val SCE_AHK_DIRECTIVE_SHARP=
val SCE_AHK_DYNAMIC_VARIABLE=
val SCE_AHK_SECTION_OPTION=
val SCE_AHK_SECTION_SQ=
val SCE_AHK_SECTION_DQ=
val SCE_AHK_SECTION_NQ=
val SCE_AHK_STRING_DQ=
val SCE_AHK_STRING_SQ=
val SCE_AHK_ESCAPECHAR=
val SCE_AHK_FORMAT_SPECIFIER=
val SCE_AHK_SENTKEY=
val SCE_AHK_HOTKEY=
val SCE_AHK_HOTSTRING_OPTION=
val SCE_AHK_HOTSTRING_KEY=
val SCE_AHK_HOTSTRING_VALUE=
val SCE_AHK_LABEL=
val SCE_AHK_KEYWORD=
val SCE_AHK_CLASS=
val SCE_AHK_BUILTIN_VARIABLE=
val SCE_AHK_BUILTIN_FUNCTION=
val SCE_AHK_FUNCTION=
val SCE_AHK_KEY=
# Lexical states for SCLEX_A68K
#lex A68k=SCLEX_A68K SCE_A68K_
#val SCE_A68K_DEFAULT=0
#val SCE_A68K_COMMENT=1
#val SCE_A68K_NUMBER_DEC=2
#val SCE_A68K_NUMBER_BIN=3
#val SCE_A68K_NUMBER_HEX=4
#val SCE_A68K_STRING1=5
#val SCE_A68K_OPERATOR=6
#val SCE_A68K_CPUINSTRUCTION=7
#val SCE_A68K_EXTINSTRUCTION=8
#val SCE_A68K_REGISTER=9
#val SCE_A68K_DIRECTIVE=10
#val SCE_A68K_MACRO_ARG=11
#val SCE_A68K_LABEL=12
#val SCE_A68K_STRING2=13
#val SCE_A68K_IDENTIFIER=14
#val SCE_A68K_MACRO_DECLARATION=15
#val SCE_A68K_COMMENT_WORD=16
#val SCE_A68K_COMMENT_SPECIAL=17
#val SCE_A68K_COMMENT_DOXYGEN=18
# Lexical states for SCLEX_MODULA
#lex Modula=SCLEX_MODULA SCE_MODULA_
#val SCE_MODULA_DEFAULT=0
#val SCE_MODULA_COMMENT=1
#val SCE_MODULA_DOXYCOMM=2
#val SCE_MODULA_DOXYKEY=3
#val SCE_MODULA_KEYWORD=4
#val SCE_MODULA_RESERVED=5
#val SCE_MODULA_NUMBER=6
#val SCE_MODULA_BASENUM=7
#val SCE_MODULA_FLOAT=8
#val SCE_MODULA_STRING=9
#val SCE_MODULA_STRSPEC=10
#val SCE_MODULA_CHAR=11
#val SCE_MODULA_CHARSPEC=12
#val SCE_MODULA_PROC=13
#val SCE_MODULA_PRAGMA=14
#val SCE_MODULA_PRGKEY=15
#val SCE_MODULA_OPERATOR=16
#val SCE_MODULA_BADSTR=17
# Lexical states for SCLEX_COFFEESCRIPT
lex CoffeeScript=SCLEX_COFFEESCRIPT SCE_COFFEESCRIPT_
val SCE_COFFEESCRIPT_DEFAULT=
val SCE_COFFEESCRIPT_COMMENTLINE=
val SCE_COFFEESCRIPT_COMMENTBLOCK=
val SCE_COFFEESCRIPT_REGEX_COMMENT=
val SCE_COFFEESCRIPT_TASKMARKER=
val SCE_COFFEESCRIPT_IDENTIFIER=
val SCE_COFFEESCRIPT_PROPERTY_AT=
val SCE_COFFEESCRIPT_XML_TAG=
val SCE_COFFEESCRIPT_XML_ATTRIBUTE=
val SCE_COFFEESCRIPT_OPERATOR=
val SCE_COFFEESCRIPT_OPERATOR2=
val SCE_COFFEESCRIPT_OPERATOR_PF=
val SCE_COFFEESCRIPT_NUMBER=
val SCE_COFFEESCRIPT_STRING_SQ=
val SCE_COFFEESCRIPT_XML_STRING_SQ=
val SCE_COFFEESCRIPT_TRIPLE_STRING_SQ=
val SCE_COFFEESCRIPT_STRING_DQ=
val SCE_COFFEESCRIPT_XML_STRING_DQ=
val SCE_COFFEESCRIPT_TRIPLE_STRING_DQ=
val SCE_COFFEESCRIPT_BACKTICKS=
val SCE_COFFEESCRIPT_TRIPLE_BACKTICKS=
val SCE_COFFEESCRIPT_ESCAPECHAR=
val SCE_COFFEESCRIPT_REGEX=
val SCE_COFFEESCRIPT_TRIPLE_REGEX=
val SCE_COFFEESCRIPT_XML_TEXT=
val SCE_COFFEESCRIPT_XML_OTHER=
val SCE_COFFEESCRIPT_WORD=
val SCE_COFFEESCRIPT_WORD2=
val SCE_COFFEESCRIPT_DIRECTIVE=
val SCE_COFFEESCRIPT_CLASS=
val SCE_COFFEESCRIPT_PROPERTY=
# Lexical states for SCLEX_AVISYNTH
lex AviSynth=SCLEX_AVISYNTH SCE_AVS_
val SCE_AVS_DEFAULT=
val SCE_AVS_COMMENTBLOCK=
val SCE_AVS_COMMENTBLOCKN=
val SCE_AVS_COMMENTLINE=
val SCE_AVS_TASKMARKER=
val SCE_AVS_NUMBER=
val SCE_AVS_OPERATOR=
val SCE_AVS_IDENTIFIER=
val SCE_AVS_STRING=
val SCE_AVS_TRIPLESTRING=
val SCE_AVS_ESCAPESTRING=
val SCE_AVS_ESCAPECHAR=
val SCE_AVS_KEYWORD=
val SCE_AVS_FILTER=
val SCE_AVS_PLUGIN=
val SCE_AVS_FUNCTION=
val SCE_AVS_CLIPPROP=
val SCE_AVS_USERDFN=
# Lexical states for SCLEX_ECL
#lex ECL=SCLEX_ECL SCE_ECL_
#val SCE_ECL_DEFAULT=0
#val SCE_ECL_COMMENT=1
#val SCE_ECL_COMMENTLINE=2
#val SCE_ECL_NUMBER=3
#val SCE_ECL_STRING=4
#val SCE_ECL_WORD0=5
#val SCE_ECL_OPERATOR=6
#val SCE_ECL_CHARACTER=7
#val SCE_ECL_UUID=8
#val SCE_ECL_PREPROCESSOR=9
#val SCE_ECL_UNKNOWN=10
#val SCE_ECL_IDENTIFIER=11
#val SCE_ECL_STRINGEOL=12
#val SCE_ECL_VERBATIM=13
#val SCE_ECL_REGEX=14
#val SCE_ECL_COMMENTLINEDOC=15
#val SCE_ECL_WORD1=16
#val SCE_ECL_COMMENTDOCKEYWORD=17
#val SCE_ECL_COMMENTDOCKEYWORDERROR=18
#val SCE_ECL_WORD2=19
#val SCE_ECL_WORD3=20
#val SCE_ECL_WORD4=21
#val SCE_ECL_WORD5=22
#val SCE_ECL_COMMENTDOC=23
#val SCE_ECL_ADDED=24
#val SCE_ECL_DELETED=25
#val SCE_ECL_CHANGED=26
#val SCE_ECL_MOVED=27
# Lexical states for SCLEX_OSCRIPT
#lex OScript=SCLEX_OSCRIPT SCE_OSCRIPT_
#val SCE_OSCRIPT_DEFAULT=0
#val SCE_OSCRIPT_LINE_COMMENT=1
#val SCE_OSCRIPT_BLOCK_COMMENT=2
#val SCE_OSCRIPT_DOC_COMMENT=3
#val SCE_OSCRIPT_PREPROCESSOR=4
#val SCE_OSCRIPT_NUMBER=5
#val SCE_OSCRIPT_SINGLEQUOTE_STRING=6
#val SCE_OSCRIPT_DOUBLEQUOTE_STRING=7
#val SCE_OSCRIPT_CONSTANT=8
#val SCE_OSCRIPT_IDENTIFIER=9
#val SCE_OSCRIPT_GLOBAL=10
#val SCE_OSCRIPT_KEYWORD=11
#val SCE_OSCRIPT_OPERATOR=12
#val SCE_OSCRIPT_LABEL=13
#val SCE_OSCRIPT_TYPE=14
#val SCE_OSCRIPT_FUNCTION=15
#val SCE_OSCRIPT_OBJECT=16
#val SCE_OSCRIPT_PROPERTY=17
#val SCE_OSCRIPT_METHOD=18
# Lexical states for SCLEX_VISUALPROLOG
#lex VisualProlog=SCLEX_VISUALPROLOG SCE_VISUALPROLOG_
#val SCE_VISUALPROLOG_DEFAULT=0
#val SCE_VISUALPROLOG_KEY_MAJOR=1
#val SCE_VISUALPROLOG_KEY_MINOR=2
#val SCE_VISUALPROLOG_KEY_DIRECTIVE=3
#val SCE_VISUALPROLOG_COMMENT_BLOCK=4
#val SCE_VISUALPROLOG_COMMENT_LINE=5
#val SCE_VISUALPROLOG_COMMENT_KEY=6
#val SCE_VISUALPROLOG_COMMENT_KEY_ERROR=7
#val SCE_VISUALPROLOG_IDENTIFIER=8
#val SCE_VISUALPROLOG_VARIABLE=9
#val SCE_VISUALPROLOG_ANONYMOUS=10
#val SCE_VISUALPROLOG_NUMBER=11
#val SCE_VISUALPROLOG_OPERATOR=12
#val SCE_VISUALPROLOG_CHARACTER=13
#val SCE_VISUALPROLOG_CHARACTER_TOO_MANY=14
#val SCE_VISUALPROLOG_CHARACTER_ESCAPE_ERROR=15
#val SCE_VISUALPROLOG_STRING=16
#val SCE_VISUALPROLOG_STRING_ESCAPE=17
#val SCE_VISUALPROLOG_STRING_ESCAPE_ERROR=18
#val SCE_VISUALPROLOG_STRING_EOL_OPEN=19
#val SCE_VISUALPROLOG_STRING_VERBATIM=20
#val SCE_VISUALPROLOG_STRING_VERBATIM_SPECIAL=21
#val SCE_VISUALPROLOG_STRING_VERBATIM_EOL=22
# Lexical states for SCLEX_STTXT
#lex StructuredText=SCLEX_STTXT SCE_STTXT_
#val SCE_STTXT_DEFAULT=0
#val SCE_STTXT_COMMENT=1
#val SCE_STTXT_COMMENTLINE=2
#val SCE_STTXT_KEYWORD=3
#val SCE_STTXT_TYPE=4
#val SCE_STTXT_FUNCTION=5
#val SCE_STTXT_FB=6
#val SCE_STTXT_NUMBER=7
#val SCE_STTXT_HEXNUMBER=8
#val SCE_STTXT_PRAGMA=9
#val SCE_STTXT_OPERATOR=10
#val SCE_STTXT_CHARACTER=11
#val SCE_STTXT_STRING1=12
#val SCE_STTXT_STRING2=13
#val SCE_STTXT_STRINGEOL=14
#val SCE_STTXT_IDENTIFIER=15
#val SCE_STTXT_DATETIME=16
#val SCE_STTXT_VARS=17
#val SCE_STTXT_PRAGMAS=18
# Lexical states for SCLEX_KVIRC
#lex KVIrc=SCLEX_KVIRC SCE_KVIRC_
#val SCE_KVIRC_DEFAULT=0
#val SCE_KVIRC_COMMENT=1
#val SCE_KVIRC_COMMENTBLOCK=2
#val SCE_KVIRC_STRING=3
#val SCE_KVIRC_WORD=4
#val SCE_KVIRC_KEYWORD=5
#val SCE_KVIRC_FUNCTION_KEYWORD=6
#val SCE_KVIRC_FUNCTION=7
#val SCE_KVIRC_VARIABLE=8
#val SCE_KVIRC_NUMBER=9
#val SCE_KVIRC_OPERATOR=10
#val SCE_KVIRC_STRING_FUNCTION=11
#val SCE_KVIRC_STRING_VARIABLE=12
# Lexical states for SCLEX_RUST
lex Rust=SCLEX_RUST SCE_RUST_
val SCE_RUST_DEFAULT=
val SCE_RUST_COMMENTLINE=
val SCE_RUST_COMMENTLINEDOC=
val SCE_RUST_COMMENTBLOCK=
val SCE_RUST_COMMENTBLOCKDOC=
val SCE_RUST_TASKMARKER=
val SCE_RUST_OPERATOR=
val SCE_RUST_ATTRIBUTE=
val SCE_RUST_NUMBER=
val SCE_RUST_CHARACTER=
val SCE_RUST_BYTE_CHARACTER=
val SCE_RUST_STRING=
val SCE_RUST_BYTESTRING=
val SCE_RUST_RAW_STRING=
val SCE_RUST_RAW_BYTESTRING=
val SCE_RUST_ESCAPECHAR=
val SCE_RUST_FORMAT_SPECIFIER=
val SCE_RUST_PLACEHOLDER=
val SCE_RUST_IDENTIFIER=
val SCE_RUST_VARIABLE=
val SCE_RUST_LIFETIME=
val SCE_RUST_WORD=
val SCE_RUST_WORD2=
val SCE_RUST_TYPE=
val SCE_RUST_STRUCT=
val SCE_RUST_TRAIT=
val SCE_RUST_ENUMERATION=
val SCE_RUST_UNION=
val SCE_RUST_MACRO=
val SCE_RUST_FUNCTION=
val SCE_RUST_FUNCTION_DEFINITION=
val SCE_RUST_CONSTANT=
#val SCE_RUST_LEXERROR=
# Lexical states for SCLEX_DMAP
#lex DMAP=SCLEX_DMAP SCE_DMAP_
#val SCE_DMAP_DEFAULT=0
#val SCE_DMAP_COMMENT=1
#val SCE_DMAP_NUMBER=2
#val SCE_DMAP_STRING1=3
#val SCE_DMAP_STRING2=4
#val SCE_DMAP_STRINGEOL=5
#val SCE_DMAP_OPERATOR=6
#val SCE_DMAP_IDENTIFIER=7
#val SCE_DMAP_WORD=8
#val SCE_DMAP_WORD2=9
#val SCE_DMAP_WORD3=10
# Lexical states for SCLEX_DMIS
#lex DMIS=SCLEX_DMIS SCE_DMIS_
#val SCE_DMIS_DEFAULT=0
#val SCE_DMIS_COMMENT=1
#val SCE_DMIS_STRING=2
#val SCE_DMIS_NUMBER=3
#val SCE_DMIS_KEYWORD=4
#val SCE_DMIS_MAJORWORD=5
#val SCE_DMIS_MINORWORD=6
#val SCE_DMIS_UNSUPPORTED_MAJOR=7
#val SCE_DMIS_UNSUPPORTED_MINOR=8
#val SCE_DMIS_LABEL=9
# Lexical states for SCLEX_REGISTRY
lex Registry=SCLEX_REGISTRY SCE_REG_
val SCE_REG_DEFAULT=0
val SCE_REG_COMMENT=1
val SCE_REG_VALUENAME=2
val SCE_REG_STRING=3
val SCE_REG_HEXDIGIT=4
val SCE_REG_VALUETYPE=5
val SCE_REG_ADDEDKEY=6
val SCE_REG_DELETEDKEY=7
val SCE_REG_ESCAPED=8
val SCE_REG_KEYPATH_GUID=9
val SCE_REG_STRING_GUID=10
val SCE_REG_PARAMETER=11
val SCE_REG_OPERATOR=12
# Lexical state for SCLEX_BIBTEX
#lex BibTeX=SCLEX_BIBTEX SCE_BIBTEX_
#val SCE_BIBTEX_DEFAULT=0
#val SCE_BIBTEX_ENTRY=1
#val SCE_BIBTEX_UNKNOWN_ENTRY=2
#val SCE_BIBTEX_KEY=3
#val SCE_BIBTEX_PARAMETER=4
#val SCE_BIBTEX_VALUE=5
#val SCE_BIBTEX_COMMENT=6
# Lexical state for SCLEX_SRECORD
lex SRecord=SCLEX_SRECORD SCE_HEX_
val SCE_HEX_DEFAULT=0
val SCE_HEX_RECSTART=1
val SCE_HEX_RECTYPE=2
val SCE_HEX_RECTYPE_UNKNOWN=3
val SCE_HEX_BYTECOUNT=4
val SCE_HEX_BYTECOUNT_WRONG=5
val SCE_HEX_NOADDRESS=6
val SCE_HEX_DATAADDRESS=7
val SCE_HEX_RECCOUNT=8
val SCE_HEX_STARTADDRESS=9
val SCE_HEX_ADDRESSFIELD_UNKNOWN=10
val SCE_HEX_EXTENDEDADDRESS=11
val SCE_HEX_DATA_ODD=12
val SCE_HEX_DATA_EVEN=13
val SCE_HEX_DATA_UNKNOWN=14
val SCE_HEX_DATA_EMPTY=15
val SCE_HEX_CHECKSUM=16
val SCE_HEX_CHECKSUM_WRONG=17
val SCE_HEX_GARBAGE=18
# Lexical state for SCLEX_INTELHEX (shared with SRecord)
lex IntelHex=SCLEX_INTELHEX SCE_HEX_
# Lexical state for SCLEX_TEKEXTHEX (shared with SRecord)
lex TekExtHex=SCLEX_TEKEXTHEX SCE_HEX_
# Lexical states for SCLEX_JSON
lex JSON=SCLEX_JSON SCE_JSON_
val SCE_JSON_DEFAULT=0
val SCE_JSON_LINECOMMENT=1
val SCE_JSON_BLOCKCOMMENT=2
val SCE_JSON_OPERATOR=3
val SCE_JSON_NUMBER=4
val SCE_JSON_IDENTIFIER=5
val SCE_JSON_STRING_DQ=6
val SCE_JSON_STRING_SQ=7
val SCE_JSON_ESCAPECHAR=8
val SCE_JSON_PROPERTYNAME=9
val SCE_JSON_KEYWORD=10
#val SCE_JSON_URI=9
#val SCE_JSON_COMPACTIRI=10
#val SCE_JSON_LDKEYWORD=12
#val SCE_JSON_ERROR=13
#lex EDIFACT=SCLEX_EDIFACT SCE_EDI_
#val SCE_EDI_DEFAULT=0
#val SCE_EDI_SEGMENTSTART=1
#val SCE_EDI_SEGMENTEND=2
#val SCE_EDI_SEP_ELEMENT=3
#val SCE_EDI_SEP_COMPOSITE=4
#val SCE_EDI_SEP_RELEASE=5
#val SCE_EDI_UNA=6
#val SCE_EDI_UNH=7
#val SCE_EDI_BADSEGMENT=8
# Lexical states for SCLEX_STATA
#lex STATA=SCLEX_STATA SCE_STATA_
#val SCE_STATA_DEFAULT=0
#val SCE_STATA_COMMENT=1
#val SCE_STATA_COMMENTLINE=2
#val SCE_STATA_COMMENTBLOCK=3
#val SCE_STATA_NUMBER=4
#val SCE_STATA_OPERATOR=5
#val SCE_STATA_IDENTIFIER=6
#val SCE_STATA_STRING=7
#val SCE_STATA_TYPE=8
#val SCE_STATA_WORD=9
#val SCE_STATA_GLOBAL_MACRO=10
#val SCE_STATA_MACRO=11
# Lexical states for SCLEX_SAS
lex SAS=SCLEX_SAS SCE_SAS_
val SCE_SAS_DEFAULT=
val SCE_SAS_COMMENT=
val SCE_SAS_COMMENTBLOCK=
val SCE_SAS_NUMBER=
val SCE_SAS_OPERATOR=
val SCE_SAS_STRINGDQ=
val SCE_SAS_STRINGSQ=
val SCE_SAS_IDENTIFIER=
val SCE_SAS_MACRO=
val SCE_SAS_WORD=
val SCE_SAS_MACRO_KEYWORD=
val SCE_SAS_MACRO_FUNCTION=
val SCE_SAS_BASIC_FUNCTION=
# Lexical states for SCLEX_NIM
lex Nim=SCLEX_NIM SCE_NIM_
val SCE_NIM_DEFAULT=
val SCE_NIM_COMMENT=
val SCE_NIM_COMMENTDOC=
val SCE_NIM_COMMENTLINE=
val SCE_NIM_COMMENTLINEDOC=
val SCE_NIM_TASKMARKER=
val SCE_NIM_NUMBER=
val SCE_NIM_OPERATOR=
val SCE_NIM_OPERATOR2=
val SCE_NIM_CHARACTER=
val SCE_NIM_STRING=
val SCE_NIM_FMTSTRING=
val SCE_NIM_RAWSTRING=
val SCE_NIM_RAWFMTSTRING=
val SCE_NIM_TRIPLE_STRING=
val SCE_NIM_TRIPLE_FMTSTRING=
val SCE_NIM_ESCAPECHAR=
val SCE_NIM_FORMAT_SPECIFIER=
val SCE_NIM_PLACEHOLDER=
val SCE_NIM_BACKTICKS=
val SCE_NIM_IDENTIFIER=
val SCE_NIM_PRAGMA=
val SCE_NIM_WORD=
val SCE_NIM_TYPE=
val SCE_NIM_FUNCTION=
val SCE_NIM_FUNCTION_DEFINITION=
# Lexical states for SCLEX_CIL
lex CIL=SCLEX_CIL SCE_CIL_
val SCE_CIL_DEFAULT=
val SCE_CIL_COMMENTLINE=
val SCE_CIL_COMMENTBLOCK=
val SCE_CIL_NUMBER=
val SCE_CIL_OPERATOR=
val SCE_CIL_CHARACTER=
val SCE_CIL_STRING=
val SCE_CIL_IDENTIFIER=
val SCE_CIL_DIRECTIVE=
val SCE_CIL_INSTRUCTION=
# val SCE_CIL_PREPROCESSOR=
val SCE_CIL_WORD=
val SCE_CIL_WORD2=
# val SCE_CIL_REGISTER=
val SCE_CIL_LABEL=
# Lexical states for SCLEX_X12
#lex X12=SCLEX_X12 SCE_X12_
#val SCE_X12_DEFAULT=0
#val SCE_X12_BAD=1
#val SCE_X12_ENVELOPE=2
#val SCE_X12_FUNCTIONGROUP=3
#val SCE_X12_TRANSACTIONSET=4
#val SCE_X12_SEGMENTHEADER=5
#val SCE_X12_SEGMENTEND=6
#val SCE_X12_SEP_ELEMENT=7
#val SCE_X12_SEP_SUBELEMENT=8
# Lexical states for SCLEX_DATAFLEX
#lex Dataflex=SCLEX_DATAFLEX SCE_DF_
#val SCE_DF_DEFAULT=0
#val SCE_DF_IDENTIFIER=1
#val SCE_DF_METATAG=2
#val SCE_DF_IMAGE=3
#val SCE_DF_COMMENTLINE=4
#val SCE_DF_PREPROCESSOR=5
#val SCE_DF_PREPROCESSOR2=6
#val SCE_DF_NUMBER=7
#val SCE_DF_HEXNUMBER=8
#val SCE_DF_WORD=9
#val SCE_DF_STRING=10
#val SCE_DF_STRINGEOL=11
#val SCE_DF_SCOPEWORD=12
#val SCE_DF_OPERATOR=13
#val SCE_DF_ICODE=14
# Lexical states for SCLEX_HOLLYWOOD
#lex Hollywood=SCLEX_HOLLYWOOD SCE_HOLLYWOOD_
#val SCE_HOLLYWOOD_DEFAULT=0
#val SCE_HOLLYWOOD_COMMENT=1
#val SCE_HOLLYWOOD_COMMENTBLOCK=2
#val SCE_HOLLYWOOD_NUMBER=3
#val SCE_HOLLYWOOD_KEYWORD=4
#val SCE_HOLLYWOOD_STDAPI=5
#val SCE_HOLLYWOOD_PLUGINAPI=6
#val SCE_HOLLYWOOD_PLUGINMETHOD=7
#val SCE_HOLLYWOOD_STRING=8
#val SCE_HOLLYWOOD_STRINGBLOCK=9
#val SCE_HOLLYWOOD_PREPROCESSOR=10
#val SCE_HOLLYWOOD_OPERATOR=11
#val SCE_HOLLYWOOD_IDENTIFIER=12
#val SCE_HOLLYWOOD_CONSTANT=13
#val SCE_HOLLYWOOD_HEXNUMBER=14
# Lexical states for SCLEX_RAKU
#lex Raku=SCLEX_RAKU SCE_RAKU_
#val SCE_RAKU_DEFAULT=0
#val SCE_RAKU_ERROR=1
#val SCE_RAKU_COMMENTLINE=2
#val SCE_RAKU_COMMENTEMBED=3
#val SCE_RAKU_POD=4
#val SCE_RAKU_CHARACTER=5
#val SCE_RAKU_HEREDOC_Q=6
#val SCE_RAKU_HEREDOC_QQ=7
#val SCE_RAKU_STRING=8
#val SCE_RAKU_STRING_Q=9
#val SCE_RAKU_STRING_QQ=10
#val SCE_RAKU_STRING_Q_LANG=11
#val SCE_RAKU_STRING_VAR=12
#val SCE_RAKU_REGEX=13
#val SCE_RAKU_REGEX_VAR=14
#val SCE_RAKU_ADVERB=15
#val SCE_RAKU_NUMBER=16
#val SCE_RAKU_PREPROCESSOR=17
#val SCE_RAKU_OPERATOR=18
#val SCE_RAKU_WORD=19
#val SCE_RAKU_FUNCTION=20
#val SCE_RAKU_IDENTIFIER=21
#val SCE_RAKU_TYPEDEF=22
#val SCE_RAKU_MU=23
#val SCE_RAKU_POSITIONAL=24
#val SCE_RAKU_ASSOCIATIVE=25
#val SCE_RAKU_CALLABLE=26
#val SCE_RAKU_GRAMMAR=27
#val SCE_RAKU_CLASS=28
# Lexical states for SCLEX_VIM
lex Vim=SCLEX_VIM SCE_VIM_
val SCE_VIM_DEFAULT=0
val SCE_VIM_COMMENTLINE=1
val SCE_VIM_TASKMARKER=2
val SCE_VIM_NUMBER=3
val SCE_VIM_OPERATOR=4
val SCE_VIM_IDENTIFIER=5
val SCE_VIM_WORD=6
val SCE_VIM_WORD_DEMOTED=7
val SCE_VIM_COMMANDS=8
val SCE_VIM_STRING_DQ=9
val SCE_VIM_STRING_SQ=10
val SCE_VIM_ESCAPECHAR=11
val SCE_VIM_BLOB_HEX=12
val SCE_VIM_REGEX=13
val SCE_VIM_FUNCTION=14
val SCE_VIM_ENV_VARIABLE=15
val SCE_VIM_OPTION=16
val SCE_VIM_REGISTER=17
val SCE_VIM_HEREDOC=18
# Lexical states for SCLEX_KOTLIN
lex Kotlin=SCLEX_KOTLIN SCE_KOTLIN_
val SCE_KOTLIN_DEFAULT=
val SCE_KOTLIN_COMMENTLINE=
val SCE_KOTLIN_COMMENTLINEDOC=
val SCE_KOTLIN_COMMENTBLOCK=
val SCE_KOTLIN_COMMENTBLOCKDOC=
val SCE_KOTLIN_COMMENTDOCWORD=
val SCE_KOTLIN_TASKMARKER=
val SCE_KOTLIN_NUMBER=
val SCE_KOTLIN_OPERATOR=
val SCE_KOTLIN_OPERATOR2=
val SCE_KOTLIN_CHARACTER=
val SCE_KOTLIN_STRING=
val SCE_KOTLIN_RAWSTRING=
val SCE_KOTLIN_ESCAPECHAR=
val SCE_KOTLIN_LABEL=
val SCE_KOTLIN_IDENTIFIER=
val SCE_KOTLIN_ANNOTATION=
val SCE_KOTLIN_BACKTICKS=
val SCE_KOTLIN_WORD=
val SCE_KOTLIN_CLASS=
val SCE_KOTLIN_INTERFACE=
val SCE_KOTLIN_ENUM=
val SCE_KOTLIN_FUNCTION=
val SCE_KOTLIN_FUNCTION_DEFINITION=
# Lexical states for SCLEX_JULIA
lex Julia=SCLEX_JULIA SCE_JULIA_
val SCE_JULIA_DEFAULT=
val SCE_JULIA_COMMENTLINE=
val SCE_JULIA_COMMENTBLOCK=
val SCE_JULIA_TASKMARKER=
val SCE_JULIA_NUMBER=
val SCE_JULIA_IDENTIFIER=
val SCE_JULIA_MACRO=
val SCE_JULIA_SYMBOL=
val SCE_JULIA_VARIABLE=
val SCE_JULIA_VARIABLE2=
val SCE_JULIA_CHARACTER=
val SCE_JULIA_BACKTICKS=11
val SCE_JULIA_TRIPLE_BACKTICKS=12
val SCE_JULIA_STRING=13
val SCE_JULIA_TRIPLE_STRING=14
val SCE_JULIA_RAWSTRING=
val SCE_JULIA_TRIPLE_RAWSTRING=
val SCE_JULIA_BYTESTRING=
val SCE_JULIA_TRIPLE_BYTESTRING=
val SCE_JULIA_ESCAPECHAR=
val SCE_JULIA_FORMAT_SPECIFIER=
val SCE_JULIA_REGEX=
val SCE_JULIA_TRIPLE_REGEX=
val SCE_JULIA_OPERATOR=
val SCE_JULIA_OPERATOR2=
val SCE_JULIA_FUNCTION=
val SCE_JULIA_WORD=
val SCE_JULIA_WORD_DEMOTED=
val SCE_JULIA_TYPE=
val SCE_JULIA_CONSTANT=
val SCE_JULIA_BASIC_FUNCTION=
val SCE_JULIA_FUNCTION_DEFINITION=
# Lexical states for SCLEX_LLVM
lex LLVM=SCLEX_LLVM SCE_LLVM_
val SCE_LLVM_DEFAULT=
val SCE_LLVM_COMMENTLINE=
val SCE_LLVM_TASKMARKER=
val SCE_LLVM_NUMBER=
val SCE_LLVM_IDENTIFIER=
val SCE_LLVM_OPERATOR=
val SCE_LLVM_STRING=
val SCE_LLVM_META_STRING=
val SCE_LLVM_ESCAPECHAR=
val SCE_LLVM_COMDAT=
val SCE_LLVM_METADATA=
val SCE_LLVM_ATTRIBUTE_GROUP=
val SCE_LLVM_VARIABLE=
val SCE_LLVM_GLOBAL_VARIABLE=
val SCE_LLVM_QUOTED_VARIABLE=
val SCE_LLVM_QUOTED_GLOBAL_VARIABLE=
val SCE_LLVM_ATTRIBUTE=
val SCE_LLVM_INSTRUCTION=
val SCE_LLVM_INTRINSIC=
val SCE_LLVM_FUNCTION=
val SCE_LLVM_WORD=
val SCE_LLVM_WORD2=
val SCE_LLVM_TYPE=
val SCE_LLVM_LABEL=
# Lexical states for SCLEX_WASM
lex WASM=SCLEX_WASM SCE_WASM_
val SCE_WASM_DEFAULT=0
val SCE_WASM_COMMENTLINE=1
val SCE_WASM_COMMENTBLOCK=2
val SCE_WASM_TASKMARKER=3
val SCE_WASM_NUMBER=4
val SCE_WASM_OPERATOR=5
val SCE_WASM_IDENTIFIER=6
val SCE_WASM_STRING=7
val SCE_WASM_ESCAPECHAR=8
val SCE_WASM_INSTRUCTION=9
val SCE_WASM_WORD=10
val SCE_WASM_KEYWORD=11
val SCE_WASM_TYPE=12
# Lexical states for SCLEX_TOML
lex TOML=SCLEX_TOML SCE_TOML_
val SCE_TOML_DEFAULT=
val SCE_TOML_COMMENT=
val SCE_TOML_IDENTIFIER=
val SCE_TOML_KEYWORD=
val SCE_TOML_NUMBER=
val SCE_TOML_TABLE=
val SCE_TOML_KEY=
val SCE_TOML_ERROR=
val SCE_TOML_OPERATOR=
val SCE_TOML_STRING_SQ=
val SCE_TOML_STRING_DQ=
val SCE_TOML_TRIPLE_STRING_SQ=
val SCE_TOML_TRIPLE_STRING_DQ=
val SCE_TOML_ESCAPECHAR=
val SCE_TOML_DATETIME=
# Lexical states for SCLEX_GN
lex GN=SCLEX_GN SCE_GN_
val SCE_GN_DEFAULT=0
val SCE_GN_COMMENT=1
val SCE_GN_TASKMARKER=2
val SCE_GN_IDENTIFIER=3
val SCE_GN_NUMBER=4
val SCE_GN_OPERATOR=5
val SCE_GN_OPERATOR2=6
val SCE_GN_STRING=7
val SCE_GN_ESCAPECHAR=8
val SCE_GN_VARIABLE=9
val SCE_GN_PLACEHOLDER=10
val SCE_GN_KEYWORD=11
val SCE_GN_BUILTIN_VARIABLE=12
val SCE_GN_BUILTIN_FUNCTION=13
val SCE_GN_FUNCTION=14
# Lexical states for SCLEX_GO
lex Go=SCLEX_GO SCE_GO_
val SCE_GO_DEFAULT=
val SCE_GO_COMMENTLINE=
val SCE_GO_TASKMARKERLINE=
val SCE_GO_COMMENTBLOCK=
val SCE_GO_TASKMARKER=
val SCE_GO_CHARACTER=
val SCE_GO_STRING=
val SCE_GO_RAW_STRING=
val SCE_GO_ESCAPECHAR=
val SCE_GO_FORMAT_SPECIFIER=
val SCE_GO_NUMBER=
val SCE_GO_OPERATOR=
val SCE_GO_OPERATOR2=
val SCE_GO_LABEL=
val SCE_GO_IDENTIFIER=
val SCE_GO_WORD=
val SCE_GO_WORD2=
val SCE_GO_BUILTIN_FUNC=
val SCE_GO_TYPE=
val SCE_GO_STRUCT=
val SCE_GO_INTERFACE=
val SCE_GO_CONSTANT=
val SCE_GO_FUNCTION=
val SCE_GO_FUNCTION_DEFINITION=
val SCE_GO_KEY=
# Lexical states for SCLEX_DART
lex Dart=SCLEX_DART SCE_DART_
val SCE_DART_DEFAULT=
val SCE_DART_COMMENTLINE=
val SCE_DART_COMMENTLINEDOC=
val SCE_DART_COMMENTBLOCK=
val SCE_DART_COMMENTBLOCKDOC=
val SCE_DART_TASKMARKER=
val SCE_DART_NUMBER=
val SCE_DART_SIMPLE_IDENTIFIER=
val SCE_DART_IDENTIFIER=
val SCE_DART_SYMBOL_IDENTIFIER=
val SCE_DART_METADATA=
val SCE_DART_STRING_SQ=11
val SCE_DART_STRING_DQ=12
val SCE_DART_TRIPLE_STRING_SQ=13
val SCE_DART_TRIPLE_STRING_DQ=14
val SCE_DART_RAWSTRING_SQ=
val SCE_DART_RAWSTRING_DQ=
val SCE_DART_TRIPLE_RAWSTRING_SQ=
val SCE_DART_TRIPLE_RAWSTRING_DQ=
val SCE_DART_ESCAPECHAR=
val SCE_DART_OPERATOR=
val SCE_DART_OPERATOR2=
val SCE_DART_SYMBOL_OPERATOR=
val SCE_DART_LABEL=
val SCE_DART_FUNCTION=
val SCE_DART_FUNCTION_DEFINITION=
val SCE_DART_WORD=
val SCE_DART_WORD2=
val SCE_DART_CLASS=
val SCE_DART_ENUM=
val SCE_DART_KEY=
# Lexical states for SCLEX_SWIFT
lex Swift=SCLEX_SWIFT SCE_SWIFT_
val SCE_SWIFT_DEFAULT=
val SCE_SWIFT_COMMENTLINE=
val SCE_SWIFT_COMMENTLINEDOC=
val SCE_SWIFT_COMMENTBLOCK=
val SCE_SWIFT_COMMENTBLOCKDOC=
val SCE_SWIFT_TASKMARKER=
val SCE_SWIFT_OPERATOR=
val SCE_SWIFT_OPERATOR2=
val SCE_SWIFT_OPERATOR_PF=
val SCE_SWIFT_NUMBER=
val SCE_SWIFT_ESCAPECHAR=
val SCE_SWIFT_STRING=
val SCE_SWIFT_TRIPLE_STRING=
val SCE_SWIFT_STRING_ED=
val SCE_SWIFT_TRIPLE_STRING_ED=
val SCE_SWIFT_REGEX_ED=
val SCE_SWIFT_REGEX=
val SCE_SWIFT_DIRECTIVE=
val SCE_SWIFT_IDENTIFIER=
val SCE_SWIFT_IDENTIFIER_BT=
val SCE_SWIFT_ATTRIBUTE=
val SCE_SWIFT_VARIABLE=
val SCE_SWIFT_WORD=
val SCE_SWIFT_CLASS=
val SCE_SWIFT_STRUCT=
val SCE_SWIFT_PROTOCOL=
val SCE_SWIFT_ENUM=
val SCE_SWIFT_MACRO=
val SCE_SWIFT_FUNCTION_DEFINITION=
val SCE_SWIFT_FUNCTION=
val SCE_SWIFT_KEY=
val SCE_SWIFT_LABEL=
# Lexical states for SCLEX_JAVASCRIPT
lex JavaScript=SCLEX_JAVASCRIPT SCE_JS_ SCE_JSX_
val SCE_JS_DEFAULT=
val SCE_JS_COMMENTLINE=
val SCE_JS_COMMENTLINEDOC=
val SCE_JS_COMMENTBLOCK=
val SCE_JS_COMMENTBLOCKDOC=
val SCE_JS_HTMLCOMMENT=
val SCE_JS_COMMENTTAGAT=
val SCE_JS_COMMENTTAGXML=
val SCE_JS_TASKMARKER=
val SCE_JS_NUMBER=
val SCE_JSX_OTHER=11
val SCE_JSX_TEXT=12
val SCE_JS_TEMPLATELITERAL=13
# val SCE_JS_TAGGED_TEMPLATE=14
val SCE_JS_REGEX=
val SCE_JS_STRING_SQ=
val SCE_JS_STRING_DQ=
val SCE_JSX_STRING_SQ=
val SCE_JSX_STRING_DQ=
val SCE_JS_ESCAPECHAR=
val SCE_JS_OPERATOR_PF=
val SCE_JS_OPERATOR=
val SCE_JS_OPERATOR2=
val SCE_JS_IDENTIFIER=
val SCE_JSX_TAG=
val SCE_JSX_ATTRIBUTE=
val SCE_JSX_ATTRIBUTE_AT=
val SCE_JS_DECORATOR=
val SCE_JS_FUNCTION_DEFINITION=
val SCE_JS_FUNCTION=
val SCE_JS_WORD=
val SCE_JS_WORD2=
val SCE_JS_DIRECTIVE=
val SCE_JS_CLASS=
val SCE_JS_INTERFACE=
val SCE_JS_ENUM=
val SCE_JS_CONSTANT=
val SCE_JS_KEY=
val SCE_JS_LABEL=
# Lexical states for SCLEX_JAVA
lex Java=SCLEX_JAVA SCE_JAVA_
val SCE_JAVA_DEFAULT=
val SCE_JAVA_COMMENTLINE=
val SCE_JAVA_COMMENTLINEDOC=
val SCE_JAVA_COMMENTBLOCK=
val SCE_JAVA_COMMENTBLOCKDOC=
val SCE_JAVA_COMMENTTAGAT=
val SCE_JAVA_COMMENTTAGHTML=
val SCE_JAVA_TASKMARKER=
val SCE_JAVA_OPERATOR=
val SCE_JAVA_OPERATOR2=
val SCE_JAVA_STRING=
val SCE_JAVA_TEMPLATE=11
val SCE_JAVA_TRIPLE_STRING=
val SCE_JAVA_TRIPLE_TEMPLATE=13
val SCE_JAVA_ESCAPECHAR=
val SCE_JAVA_FORMAT_SPECIFIER=
val SCE_JAVA_PLACEHOLDER=
val SCE_JAVA_CHARACTER=
val SCE_JAVA_NUMBER=
val SCE_JAVA_ANNOTATION=
val SCE_JAVA_IDENTIFIER=
val SCE_JAVA_WORD=
val SCE_JAVA_RECORD=
val SCE_JAVA_WORD2=
val SCE_JAVA_DIRECTIVE=
val SCE_JAVA_CLASS=
val SCE_JAVA_INTERFACE=
val SCE_JAVA_ENUM=
val SCE_JAVA_FUNCTION=
val SCE_JAVA_CONSTANT=
val SCE_JAVA_FUNCTION_DEFINITION=
val SCE_JAVA_LABEL=
# Lexical states for SCLEX_HAXE
lex Haxe=SCLEX_HAXE SCE_HAXE_
val SCE_HAXE_DEFAULT=
val SCE_HAXE_COMMENTLINE=
val SCE_HAXE_COMMENTLINEDOC=
val SCE_HAXE_COMMENTBLOCK=
val SCE_HAXE_COMMENTBLOCKDOC=
val SCE_HAXE_COMMENTTAGAT=
val SCE_HAXE_TASKMARKER=
val SCE_HAXE_NUMBER=
val SCE_HAXE_OPERATOR=
val SCE_HAXE_OPERATOR2=
val SCE_HAXE_STRINGDQ=
val SCE_HAXE_STRINGSQ=11
val SCE_HAXE_ESCAPECHAR=
val SCE_HAXE_REGEX=
val SCE_HAXE_VARIABLE2=
val SCE_HAXE_MATADATA=
val SCE_HAXE_IDENTIFIER=
val SCE_HAXE_VARIABLE=
val SCE_HAXE_PREPROCESSOR=
val SCE_HAXE_WORD=
val SCE_HAXE_CLASS=
val SCE_HAXE_INTERFACE=
val SCE_HAXE_ENUM=
val SCE_HAXE_CONSTANT=
val SCE_HAXE_FUNCTION_DEFINITION=
val SCE_HAXE_FUNCTION=
# Lexical states for SCLEX_GROOVY
lex Groovy=SCLEX_GROOVY SCE_GROOVY_
val SCE_GROOVY_DEFAULT=
val SCE_GROOVY_COMMENTLINE=
val SCE_GROOVY_COMMENTLINEDOC=
val SCE_GROOVY_COMMENTBLOCK=
val SCE_GROOVY_COMMENTBLOCKDOC=
val SCE_GROOVY_COMMENTTAGAT=
val SCE_GROOVY_COMMENTTAGHTML=
val SCE_GROOVY_TASKMARKER=
val SCE_GROOVY_OPERATOR=
val SCE_GROOVY_OPERATOR2=
val SCE_GROOVY_OPERATOR_PF=
val SCE_GROOVY_STRING_DQ=11
val SCE_GROOVY_TRIPLE_STRING_DQ=12
val SCE_GROOVY_SLASHY_STRING=13
val SCE_GROOVY_DOLLAR_SLASHY=14
val SCE_GROOVY_STRING_SQ=
val SCE_GROOVY_TRIPLE_STRING_SQ=
val SCE_GROOVY_ESCAPECHAR=
val SCE_GROOVY_IDENTIFIER=
val SCE_GROOVY_ANNOTATION=
val SCE_GROOVY_ATTRIBUTE_AT=
val SCE_GROOVY_NUMBER=
val SCE_GROOVY_WORD=
val SCE_GROOVY_WORD_DEMOTED=
val SCE_GROOVY_WORD2=
val SCE_GROOVY_ACTION=
val SCE_GROOVY_PROPERTY=
val SCE_GROOVY_CLASS=
val SCE_GROOVY_INTERFACE=
val SCE_GROOVY_TRAIT=
val SCE_GROOVY_ENUM=
val SCE_GROOVY_CONSTANT=
val SCE_GROOVY_FUNCTION=
val SCE_GROOVY_FUNCTION_DEFINITION=
val SCE_GROOVY_LABEL=
# Lexical states for SCLEX_JAMFILE
lex Jamfile=SCLEX_JAMFILE SCE_JAM_
val SCE_JAM_DEFAULT=0
val SCE_JAM_COMMENTLINE=1
val SCE_JAM_COMMENTBLOCK=2
val SCE_JAM_TASKMARKER=3
val SCE_JAM_OPERATOR=4
val SCE_JAM_NUMBER=5
val SCE_JAM_STRING=6
val SCE_JAM_ESCAPECHAR=7
val SCE_JAM_IDENTIFIER=8
val SCE_JAM_FEATURE=9
val SCE_JAM_WORD=10
val SCE_JAM_MODULE=11
val SCE_JAM_CLASS=12
val SCE_JAM_RULE=13
val SCE_JAM_CONSTANT=14
# Lexical states for SCLEX_AWK
lex Awk=SCLEX_AWK SCE_AWK_
val SCE_AWK_DEFAULT=0
val SCE_AWK_COMMENTLINE=1
val SCE_AWK_TASKMARKER=2
val SCE_AWK_OPERATOR=3
val SCE_AWK_OPERATOR_PF=4
val SCE_AWK_NUMBER=5
val SCE_AWK_STRING=6
val SCE_AWK_ESCAPECHAR=7
val SCE_AWK_FORMAT_SPECIFIER=8
val SCE_AWK_REGEX=9
val SCE_AWK_IDENTIFIER=10
val SCE_AWK_VARIABLE=11
val SCE_AWK_WORD=12
val SCE_AWK_BUILTIN_VARIABLE=13
val SCE_AWK_BUILTIN_FUNCTION=14
val SCE_AWK_FUNCTION_DEFINITION=15
val SCE_AWK_FUNCTION=16
# Lexical states for SCLEX_CSHARP
lex CSharp=SCLEX_CSHARP SCE_CSHARP_
val SCE_CSHARP_DEFAULT=
val SCE_CSHARP_COMMENTLINE=
val SCE_CSHARP_COMMENTLINEDOC=
val SCE_CSHARP_COMMENTBLOCK=
val SCE_CSHARP_COMMENTBLOCKDOC=
val SCE_CSHARP_COMMENTTAG_XML=
val SCE_CSHARP_TASKMARKER=
val SCE_CSHARP_NUMBER=
val SCE_CSHARP_OPERATOR=
val SCE_CSHARP_OPERATOR2=
val SCE_CSHARP_CHARACTER=
val SCE_CSHARP_STRING=
val SCE_CSHARP_INTERPOLATED_STRING=
val SCE_CSHARP_RAWSTRING_SL=
val SCE_CSHARP_INTERPOLATED_RAWSTRING_SL=
val SCE_CSHARP_RAWSTRING_ML=
val SCE_CSHARP_INTERPOLATED_RAWSTRING_ML=
val SCE_CSHARP_VERBATIM_STRING=
val SCE_CSHARP_INTERPOLATED_VERBATIM_STRING=
val SCE_CSHARP_ESCAPECHAR=
val SCE_CSHARP_FORMAT_SPECIFIER=
val SCE_CSHARP_PLACEHOLDER=
val SCE_CSHARP_PREPROCESSOR_MESSAGE=
val SCE_CSHARP_ATTRIBUTE=
val SCE_CSHARP_IDENTIFIER=
val SCE_CSHARP_PREPROCESSOR=
val SCE_CSHARP_WORD=
val SCE_CSHARP_WORD2=
val SCE_CSHARP_CLASS=
val SCE_CSHARP_INTERFACE=
val SCE_CSHARP_STRUCT=
val SCE_CSHARP_ENUM=
val SCE_CSHARP_RECORD=
val SCE_CSHARP_CONSTANT=
val SCE_CSHARP_FUNCTION=
val SCE_CSHARP_FUNCTION_DEFINITION=
val SCE_CSHARP_PREPROCESSOR_WORD=
val SCE_CSHARP_LABEL=
# Lexical states for SCLEX_GRAPHVIZ
lex GraphViz=SCLEX_GRAPHVIZ SCE_GRAPHVIZ_
val SCE_GRAPHVIZ_DEFAULT=
val SCE_GRAPHVIZ_COMMENTLINE=
val SCE_GRAPHVIZ_COMMENTBLOCK=
val SCE_GRAPHVIZ_HTML_COMMENT=
val SCE_GRAPHVIZ_TASKMARKER=
val SCE_GRAPHVIZ_IDENTIFIER=
val SCE_GRAPHVIZ_WORD=
val SCE_GRAPHVIZ_ATTRIBUTE=
val SCE_GRAPHVIZ_VALUE=
val SCE_GRAPHVIZ_HTML_TAG=
val SCE_GRAPHVIZ_HTML_TEXT=
val SCE_GRAPHVIZ_STRING=
val SCE_GRAPHVIZ_ESCAPECHAR=
val SCE_GRAPHVIZ_NUMBER=
val SCE_GRAPHVIZ_OPERATOR=
# Lexical states for SCLEX_PHPSCRIPT
lex PHP=SCLEX_PHPSCRIPT SCE_PHP_
val SCE_PHP_DEFAULT=40
val SCE_PHP_COMMENTLINE=
val SCE_PHP_COMMENTBLOCK=
val SCE_PHP_COMMENTBLOCKDOC=
val SCE_PHP_COMMENTTAGAT=
val SCE_PHP_TASKMARKER=
val SCE_PHP_NUMBER=
val SCE_PHP_OPERATOR=
val SCE_PHP_OPERATOR2=
val SCE_PHP_ESCAPECHAR=
val SCE_PHP_FORMAT_SPECIFIER=
val SCE_PHP_STRING_SQ=
val SCE_PHP_STRING_BT=
val SCE_PHP_STRING_DQ=
val SCE_PHP_HEREDOC=
val SCE_PHP_NOWDOC=
val SCE_PHP_HEREDOC_ID=
val SCE_PHP_NOWDOC_ID=
val SCE_PHP_VARIABLE2=
val SCE_PHP_IDENTIFIER2=
val SCE_PHP_VARIABLE=
val SCE_PHP_IDENTIFIER=
val SCE_PHP_ATTRIBUTE=
val SCE_PHP_WORD=
val SCE_PHP_WORD2=
val SCE_PHP_CLASS=
val SCE_PHP_INTERFACE=
val SCE_PHP_TRAIT=
val SCE_PHP_ENUM=
val SCE_PHP_MAGIC_METHOD=
val SCE_PHP_MAGIC_CONSTANT=
val SCE_PHP_PREDEFINED_VARIABLE=
val SCE_PHP_FUNCTION_DEFINITION=
val SCE_PHP_FUNCTION=
val SCE_PHP_CONSTANT=
val SCE_PHP_LABEL=
# Lexical states for SCLEX_SCALA
lex Scala=SCLEX_SCALA SCE_SCALA_
val SCE_SCALA_DEFAULT=
val SCE_SCALA_COMMENTLINE=
val SCE_SCALA_COMMENTBLOCK=
val SCE_SCALA_COMMENTBLOCKDOC=
val SCE_SCALA_COMMENTTAG=
val SCE_SCALA_TASKMARKER=
val SCE_SCALA_OPERATOR=
val SCE_SCALA_OPERATOR2=
val SCE_SCALA_OPERATOR_PF=
val SCE_SCALA_NUMBER=
val SCE_SCALA_BACKTICKS=
val SCE_SCALA_CHARACTER=
val SCE_SCALA_XML_STRING_SQ=
val SCE_SCALA_XML_STRING_DQ=
val SCE_SCALA_STRING=
val SCE_SCALA_INTERPOLATED_STRING=
val SCE_SCALA_TRIPLE_STRING=
val SCE_SCALA_TRIPLE_INTERPOLATED_STRING=
val SCE_SCALA_ESCAPECHAR=
val SCE_SCALA_XML_TEXT=
val SCE_SCALA_XML_OTHER=
val SCE_SCALA_IDENTIFIER=
val SCE_SCALA_SYMBOL=
val SCE_SCALA_ANNOTATION=
val SCE_SCALA_XML_TAG=
val SCE_SCALA_XML_ATTRIBUTE=
val SCE_SCALA_WORD=
val SCE_SCALA_CLASS=
val SCE_SCALA_TRAIT=
val SCE_SCALA_ENUM=
val SCE_SCALA_FUNCTION_DEFINITION=
val SCE_SCALA_FUNCTION=
# Lexical states for SCLEX_CSV
lex CSV=SCLEX_CSV SCE_CSV_
val SCE_CSV_DEFAULT=
val SCE_CSV_COLUMN_0=
val SCE_CSV_COLUMN_1=
val SCE_CSV_COLUMN_2=
val SCE_CSV_COLUMN_3=
val SCE_CSV_COLUMN_4=
val SCE_CSV_COLUMN_5=
val SCE_CSV_COLUMN_6=
val SCE_CSV_COLUMN_7=
val SCE_CSV_COLUMN_8=
val SCE_CSV_COLUMN_9=
val SCE_CSV_DELIMITER=
# Lexical states for SCLEX_ZIG
lex Zig=SCLEX_ZIG SCE_ZIG_
val SCE_ZIG_DEFAULT=
val SCE_ZIG_COMMENTLINE=
val SCE_ZIG_COMMENTLINEDOC=
val SCE_ZIG_COMMENTLINETOP=
val SCE_ZIG_TASKMARKER=
val SCE_ZIG_NUMBER=
val SCE_ZIG_OPERATOR=
val SCE_ZIG_CHARACTER=
val SCE_ZIG_IDENTIFIER_STRING=
val SCE_ZIG_STRING=
val SCE_ZIG_MULTISTRING=
val SCE_ZIG_ESCAPECHAR=
val SCE_ZIG_FORMAT_SPECIFIER=
val SCE_ZIG_PLACEHOLDER=
val SCE_ZIG_IDENTIFIER=
val SCE_ZIG_BUILTIN_FUNCTION=
val SCE_ZIG_WORD=
val SCE_ZIG_TYPE=
val SCE_ZIG_FUNCTION=
val SCE_ZIG_FUNCTION_DEFINITION=
# Lexical states for SCLEX_MATHEMATICA
lex Mathematica=SCLEX_MATHEMATICA SCE_MATHEMATICA_
val SCE_MATHEMATICA_DEFAULT=
val SCE_MATHEMATICA_COMMENTLINE=
val SCE_MATHEMATICA_COMMENT=
val SCE_MATHEMATICA_NUMBER=
val SCE_MATHEMATICA_OPERATOR=
val SCE_MATHEMATICA_STRING=
val SCE_MATHEMATICA_ESCAPECHAR=
val SCE_MATHEMATICA_SLOT=
val SCE_MATHEMATICA_IDENTIFIER=
val SCE_MATHEMATICA_KEYWORD=
# Lexical states for SCLEX_WINHEX
lex WinHex=SCLEX_WINHEX SCE_WINHEX_
val SCE_WINHEX_DEFAULT=
val SCE_WINHEX_COMMENTLINE=
val SCE_WINHEX_NUMBER=
val SCE_WINHEX_OPERATOR=
val SCE_WINHEX_STRING=
val SCE_WINHEX_ESCAPECHAR=
val SCE_WINHEX_IDENTIFIER=
val SCE_WINHEX_KEYWORD=
val SCE_WINHEX_TYPE=
val SCE_WINHEX_COMMAND=
# Lexical states for SCLEX_CANGJIE
lex Cangjie=SCLEX_CANGJIE SCE_CANGJIE_
val SCE_CANGJIE_DEFAULT=
val SCE_CANGJIE_COMMENTLINE=
val SCE_CANGJIE_COMMENTLINEDOC=
val SCE_CANGJIE_COMMENTBLOCK=
val SCE_CANGJIE_COMMENTBLOCKDOC=
val SCE_CANGJIE_TASKMARKER=
val SCE_CANGJIE_NUMBER=
val SCE_CANGJIE_IDENTIFIER=
val SCE_CANGJIE_IDENTIFIER_BT=
val SCE_CANGJIE_MACRO=
val SCE_CANGJIE_VARIABLE=
val SCE_CANGJIE_STRING_SQ=11
val SCE_CANGJIE_STRING_DQ=12
val SCE_CANGJIE_TRIPLE_STRING_SQ=13
val SCE_CANGJIE_TRIPLE_STRING_DQ=14
val SCE_CANGJIE_RUNE_SQ=
val SCE_CANGJIE_RUNE_DQ=
val SCE_CANGJIE_RAWSTRING_SQ=
val SCE_CANGJIE_RAWSTRING_DQ=
val SCE_CANGJIE_ESCAPECHAR=
val SCE_CANGJIE_OPERATOR=
val SCE_CANGJIE_OPERATOR2=
val SCE_CANGJIE_WORD=
val SCE_CANGJIE_WORD2=
val SCE_CANGJIE_TYPE=
val SCE_CANGJIE_ANNOTATION=
val SCE_CANGJIE_CLASS=
val SCE_CANGJIE_STRUCT=
val SCE_CANGJIE_INTERFACE=
val SCE_CANGJIE_ENUM=
val SCE_CANGJIE_FUNCTION_DEFINITION=
val SCE_CANGJIE_FUNCTION=
# Lexical states for SCLEX_GEOGEGRA
lex Geogebra=SCLEX_GEOGEGRA SCE_GGB_
val SCE_GGB_DEFAULT=
val SCE_GGB_COMMENTLINE=
val SCE_GGB_TASKMARKER=
val SCE_GGB_OPERATOR=
val SCE_GGB_NUMBER=
val SCE_GGB_IDENTIFIER=
val SCE_GGB_WORD=
val SCE_GGB_CONSTANT=
val SCE_GGB_INNERFUNCTION=
val SCE_GGB_FUNCTION=
