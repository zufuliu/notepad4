#include "EditLexer.h"
#include "EditStyleX.h"

static KEYWORDLIST Keywords_Ggb = {{
//++Autogenerated -- start of section automatically generated
"! $ % & '' ( ) * + , - . / < = > ? False Infinity NaN Pi True Undefined [ ] ^ deg false inf infinity pi rad true xcoord "
"ycoord zcoord { | } "

, // 1 constants
"Aqua Black Blue Brown Crimson Cyan Dark Gold Gray Green Indigo Light Lime Magenta Maroon Orange Pink Purple Red Silver "
"Teal Turquoise Violet White Yellow euler_gamma xAxis yAxis zAxis "

, // 2 innerfunction
"LambertW( "
"abs( acos( acosd( acosh( alt( arccos( arccosh( arcsin( arcsinh( arctan( arctanh( arg( asin( asind( asinh( "
"atan( atan2( atan2d( atand( atanh( "
"beta( betaRegularized( cbrt( ceil( conjugate( cos( cosIntegral( cosec( cosh( cot( cotan( cotanh( coth( csc( csch( "
"erf( exp( expIntegral( floor( gamma( gammaRegularized( imaginary( ld( lg( ln( log( log10( log2( nroot( polygamma( psi( "
"random( real( round( sec( sech( sgn( sign( sin( sinIntegral( sinh( sqrt( tan( tanh( x( y( z( zeta( "

, // 3 function
"ANOVA( AffineRatio( Angle( AngleBisector( Append( ApplyMatrix( "
"Arc( AreCollinear( AreConcurrent( AreConcyclic( AreCongruent( AreEqual( AreParallel( ArePerpendicular( Area( "
"Assume( Asymptote( AttachCopyToView( Axes( AxisStepX( AxisStepY( "
"BarChart( Barycenter( Bernoulli( BetaDist( BezierCurve( BinomialCoefficient( BinomialDist( Bottom( BoxPlot( Button( "
"CASLoaded( CFactor( CIFactor( CSolutions( CSolve( Cauchy( Cell( CellRange( Center( CenterView( Centroid( "
"CharacteristicPolynomial( Checkbox( ChiSquared( ChiSquaredTest( "
"Circle( CircularArc( CircularSector( CircumcircularArc( CircumcircularSector( Circumference( "
"Classes( ClosestPoint( ClosestPointRegion( Coefficients( Column( ColumnName( "
"Command( CommonDenominator( CompleteSquare( ComplexRoot( "
"Cone( Conic( ConjugateDiameter( ConstructionStep( ContingencyTable( ContinuedFraction( ConvexHull( CopyFreeObject( "
"Corner( CorrelationCoefficient( CountIf( Covariance( Cross( CrossRatio( Cube( Cubic( Curvature( CurvatureVector( Curve( "
"Cylinder( "
"DataFunction( Degree( DelaunayTriangulation( Delete( Denominator( DensityPlot( Derivative( Determinant( "
"Difference( Dilate( Dimension( Direction( Directrix( Distance( Div( Division( Divisors( DivisorsList( DivisorsSum( "
"Dodecahedron( Dot( DotPlot( DynamicCoordinates( "
"Eccentricity( Eigenvalues( Eigenvectors( Element( Eliminate( Ellipse( Ends( Envelope( Erlang( Evaluate( "
"Execute( Expand( Exponential( ExportImage( ExtendedGCD( Extremum( "
"FDistribution( Factor( Factors( FillCells( FillColumn( FillRow( First( "
"Fit( FitExp( FitGrowth( FitImplicit( FitLine( FitLineX( FitLog( FitLogistic( FitPoly( FitPow( FitSin( Flatten( "
"Focus( FormulaText( FractionText( Frequency( FrequencyPolygon( FrequencyTable( FromBase( Function( FutureValue( "
"GCD( Gamma( GeometricMean( GetTime( GroebnerDegRevLex( GroebnerLex( GroebnerLexDeg( "
"HarmonicMean( Height( HideLayer( Histogram( HistogramRight( HyperGeometric( Hyperbola( "
"IFactor( Icosahedron( Identity( If( ImplicitCurve( ImplicitDerivative( Incircle( IndexOf( "
"InfiniteCone( InfiniteCylinder( InflectionPoint( InputBox( Insert( "
"Integral( IntegralBetween( IntegralSymbolic( InteriorAngles( Intersect( IntersectConic( IntersectPath( Intersection( "
"InverseBeta( InverseBinomial( InverseBinomialMinimumTrials( InverseCauchy( InverseChiSquared( InverseExponential( "
"InverseFDistribution( InverseGamma( InverseHyperGeometric( InverseLaplace( InverseLogNormal( InverseLogistic( "
"InverseNormal( InversePascal( InversePoisson( InverseTDistribution( InverseWeibull( InverseZipf( Invert( "
"IsDefined( IsFactored( IsInRegion( IsInteger( IsPrime( IsTangent( IsVertexForm( Iteration( IterationList( "
"Join( JordanDiagonalization( KeepIf( "
"LCM( LUDecomposition( Laplace( Last( LeftSide( LeftSum( Length( LetterToUnicode( "
"Limit( LimitAbove( LimitBelow( Line( LineGraph( LinearEccentricity( "
"Locus( LocusEquation( LogNormal( Logistic( LowerSum( "
"MAD( MajorAxis( MatrixPlot( MatrixRank( Max( Maximize( Mean( MeanX( MeanY( Median( "
"Midpoint( Min( MinimalPolynomial( Minimize( MinimumSpanningTree( MinorAxis( MixedNumber( Mod( Mode( ModularExponent( "
"NDerivative( NIntegral( NInvert( NSolutions( NSolve( NSolveODE( Name( Net( NextPrime( "
"Normal( NormalQuantilePlot( Normalize( Numerator( Numeric( "
"Object( Octahedron( Ordinal( OrdinalRank( OsculatingCircle( "
"Pan( Parabola( Parameter( ParametricDerivative( ParseToFunction( ParseToNumber( PartialFractions( Pascal( "
"PathParameter( Payment( PenStroke( "
"Percentile( Perimeter( Periods( PerpendicularBisector( PerpendicularLine( PerpendicularPlane( PerpendicularVector( "
"PieChart( Plane( PlaneBisector( PlaySound( PlotSolve( "
"Point( PointIn( PointList( Poisson( Polar( Polygon( Polyline( Polynomial( "
"PresentValue( PreviousPrime( PrimeFactors( Prism( Product( Prove( ProveDetails( Pyramid( "
"QRDecomposition( Quartile1( Quartile3( "
"RSquare( Radius( RandomBetween( RandomBinomial( RandomDiscrete( RandomElement( RandomNormal( "
"RandomPointIn( RandomPoisson( RandomPolynomial( RandomUniform( Rate( Rationalize( Ray( ReadText( RectangleSum( "
"ReducedRowEchelonForm( Reflect( Relation( RemovableDiscontinuity( Remove( RemoveUndefined( Rename( Repeat( ReplaceAll( "
"ResidualPlot( Reverse( RightSide( RigidPolygon( Root( RootList( RootMeanSquare( Roots( Rotate( RotateText( Row( "
"RunClickScript( RunUpdateScript( "
"SD( SDX( SDY( SVD( Sample( SampleSD( SampleSDX( SampleSDY( SampleVariance( ScientificText( Sector( Segment( "
"SelectObjects( SelectedElement( SelectedIndex( SemiMajorAxisLength( SemiMinorAxisLength( Semicircle( Sequence( "
"SetActiveView( SetAxesRatio( SetBackgroundColor( "
"SetCaption( SetColor( SetConditionToShowObject( SetConstructionStep( SetCoords( SetDecoration( SetDynamicColor( "
"SetFilling( SetFixed( SetImage( SetLabelMode( SetLayer( SetLevelOfDetail( SetLineStyle( SetLineThickness( "
"SetPerspective( SetPointSize( SetPointStyle( SetSeed( SetSpinSpeed( SetTooltipMode( SetTrace( "
"SetValue( SetViewDirection( SetVisibleInView( "
"Shear( ShortestDistance( ShowAxes( ShowGrid( ShowLabel( ShowLayer( Shuffle( Side( SigmaXX( SigmaXY( SigmaYY( Simplify( "
"Slider( Slope( SlopeField( SlowPlot( Solutions( Solve( SolveCubic( SolveODE( SolveQuartic( Sort( "
"Spearman( Sphere( Spline( Split( StartAnimation( StartRecord( StemPlot( StepGraph( StickGraph( Stretch( "
"Substitute( Sum( SumSquaredErrors( SurdText( Surface( Sxx( Sxy( Syy( "
"TDistribution( TMean2Estimate( TMeanEstimate( TTest( TTest2( TTestPaired( TableText( Take( Tangent( TaylorPolynomial( "
"Tetrahedron( Text( TextToUnicode( TiedRank( ToBase( ToComplex( ToExponential( ToPoint( ToPolar( ToolImage( Top( "
"Translate( Transpose( TrapezoidalSum( TravelingSalesman( "
"TriangleCenter( TriangleCurve( Triangular( TrigCombine( TrigExpand( TrigSimplify( Trilinear( "
"Turtle( TurtleBack( TurtleDown( TurtleForward( TurtleLeft( TurtleRight( TurtleUp( Type( "
"UnicodeToLetter( UnicodeToText( Uniform( Union( Unique( UnitPerpendicularVector( UnitVector( "
"UpdateConstruction( UpperSum( "
"Variance( Vector( Vertex( VerticalText( Volume( Voronoi( Weibull( "
"ZMean2Estimate( ZMean2Test( ZMeanEstimate( ZMeanTest( "
"ZProportion2Estimate( ZProportion2Test( ZProportionEstimate( ZProportionTest( Zip( Zipf( ZoomIn( ZoomOut( "
"mad( mean( stdev( stdevp( "

, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr
//--Autogenerated -- end of section automatically generated

}};

static EDITSTYLE Styles_GGB[] = {
	EDITSTYLE_DEFAULT,
	{ SCE_GGB_WORD, NP2StyleX_Keyword, L"fore:#0000FF" },
	{ SCE_GGB_CONSTANT, NP2StyleX_Constant, L"fore:#307300" },
	{ SCE_GGB_INNERFUNCTION, NP2StyleX_FunctionDefinition, L"bold; fore:#A46000" },
	{ SCE_GGB_FUNCTION, NP2StyleX_Function, L"fore:#A46000" },
	{ SCE_GGB_COMMENTLINE, NP2StyleX_Comment, L"fore:#608060" },
	{ SCE_GGB_NUMBER, NP2StyleX_Number, L"fore:#FF0000" },
	{ SCE_GGB_OPERATOR, NP2StyleX_Operator, L"fore:#B000B0" },
};

EDITLEXER lexGeogebra = {
	SCLEX_GEOGEBRA, NP2LEX_GEOGEBRA,
//Settings++Autogenerated -- start of section automatically generated
		LexerAttr_NoBlockComment |
		LexerAttr_PlainTextFile,
		TAB_WIDTH_4, INDENT_WIDTH_4,
		(1 << 0) | (1 << 1), // level1, level2
		0,
		'\0', 0, 0,
		0,
		0, 0,
		0, 0
		, KeywordAttr32(0, KeywordAttr_PreSorted) // operators
		| KeywordAttr32(1, KeywordAttr_PreSorted) // constants
		| KeywordAttr32(2, KeywordAttr_PreSorted) // innerfunction
		| KeywordAttr32(3, KeywordAttr_PreSorted) // function
		, SCE_GGB_COMMENTLINE,
		0, 0,
//Settings--Autogenerated -- end of section automatically generated
	EDITLEXER_HOLE(L"Geogebra Script", Styles_GGB),
	L"ggb",
	&Keywords_Ggb,
	Styles_GGB
};
